{%- comment -%}
{
  "pack_name": "Slideshow with text",
  "pack_author": "Design Packs"
}
{%- endcomment -%}

{% comment %} Security Code - hides section when app uninstalled {% endcomment %}
{%- unless content_for_header contains 'design_packs_file.js' -%}
  {%- if request.design_mode -%}
    <div class="dsgn-pck__no-app-warning">
      <div class="dsgn-pck__no-app-warning-background">
      </div>
      <div class="dsgn-pck__no-app-warning-text dsgn-pck__rte">
        <p><strong>WARNING!</strong> This section or template will not display properly without the <a href="https://apps.shopify.com/design-packs" target="_blank" rel="nofollow">Design Packs</a> app installed. Please email <a href="mailto:info@design-packs.com" target="_blank">info@design-packs.com</a> with any questions.</p>
      </div>
    </div>
  {%- endif -%}
  {%- break -%}
{%- endunless -%}

{%- comment -%} Color: check if color is set to transparent {%- endcomment -%}
{%- assign button_alpha = section.settings.button_background_color | color_extract: 'alpha' -%}

{%- comment -%} Images: check image crop aspect ratio {%- endcomment -%}
{%- if section.settings.image_crop == 'none' -%}
  {%- assign image_crop_width = section.settings.image.width | default: '1000' -%}
  {%- assign image_crop_height = section.settings.image.height | default: '1200' -%}
{%- else -%}
  {%- assign image_crop_width = section.settings.image_crop | split: ':' | first | times: 1000 -%}
  {%- assign image_crop_height = section.settings.image_crop | split: ':' | last | times: 1000 -%}
{%- endif -%}

{% comment %} Images: responsive image widths {% endcomment %}
{%- assign widths = '180, 360, 540, 720, 900, 1080, 1296, 1512, 1728, 1950, 2100, 2260, 2450, 2700, 3000, 3350, 3750, 4100' -%}

{%- comment -%} Layout: has user entered measurement value into max-width field? {%- endcomment -%}
{%- if section.settings.max_width contains 'px' or section.settings.max_width contains '%' -%}
  {%- assign max_width = section.settings.max_width -%}
{%- else -%}
  {%- assign max_width = section.settings.max_width | append: 'px' -%}
{%- endif -%}

{%- comment -%} Text: custom font_picker values {%- endcomment -%}
{%- capture font_settings_list -%}
{{ section.settings.main_font | font_face: font_display: 'swap' }}~
{{ section.settings.main_font | font_modify: 'weight', 'bolder' | font_face: font_display: 'swap' }}~
{{ section.settings.main_font | font_modify: 'style', 'italic' | font_face: font_display: 'swap' }}~
{{ section.settings.main_font | font_modify: 'style', 'italic' | font_modify: 'weight', 'bolder' | font_face: font_display: 'swap' }}~
{{ section.settings.heading_font | font_face: font_display: 'swap' }}~
{{ section.settings.heading_font | font_modify: 'weight', 'bolder' | font_face: font_display: 'swap' }}~
{{ section.settings.heading_font | font_modify: 'style', 'italic' | font_face: font_display: 'swap' }}~
{{ section.settings.heading_font | font_modify: 'style', 'italic' | font_modify: 'weight', 'bolder' | font_face: font_display: 'swap' }}
{%- endcapture -%}
{%- assign font_array = font_settings_list | split: '~' -%}

{%- capture minify -%}
{%- comment -%} CSS {%- endcomment -%}
<style>
/*! Flickity v2.2.2
https://flickity.metafizzy.co
---------------------------------------------- */
.flickity-enabled{position:relative}.flickity-enabled:focus{outline:0;box-shadow: none;}.flickity-viewport{overflow:hidden;position:relative;height:100%}.flickity-slider{position:absolute;width:100%;height:100%}.flickity-enabled.is-draggable{-webkit-tap-highlight-color:transparent;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.flickity-enabled.is-draggable .flickity-viewport{cursor:move;cursor:-webkit-grab;cursor:grab}.flickity-enabled.is-draggable .flickity-viewport.is-pointer-down{cursor:-webkit-grabbing;cursor:grabbing}.flickity-button{position:absolute;background:hsla(0,0%,100%,.75);border:none;color:#333}.flickity-button:hover{background:#fff;cursor:pointer}.flickity-button:focus{outline:0;box-shadow:0 0 0 5px #19f}.flickity-button:active{opacity:.6}.flickity-button:disabled{opacity:.3;cursor:auto;pointer-events:none}.flickity-button-icon{fill:currentColor}.flickity-prev-next-button{top:50%;width:44px;height:44px;border-radius:50%;transform:translateY(-50%)}.flickity-prev-next-button.previous{left:10px}.flickity-prev-next-button.next{right:10px}.flickity-rtl .flickity-prev-next-button.previous{left:auto;right:10px}.flickity-rtl .flickity-prev-next-button.next{right:auto;left:10px}.flickity-prev-next-button .flickity-button-icon{position:absolute;left:20%;top:20%;width:60%;height:60%}.flickity-page-dots{position:absolute;width:100%;bottom:-25px;padding:0;margin:0;list-style:none;text-align:center;line-height:1}.flickity-rtl .flickity-page-dots{direction:rtl}.flickity-page-dots .dot{display:inline-block;width:10px;height:10px;margin:0 8px;background:#333;border-radius:50%;opacity:.25;cursor:pointer}.flickity-page-dots .dot.is-selected{opacity:1}

{%- if section.settings.enable_lightbox != blank -%}
.bp-img-wrap,.bp-wrap{top:0;left:0;width:100%;height:100%;contain:strict}.bp-controls,.bp-zoomed.bp-small .bp-controls button{pointer-events:none}.bp-cap,.bp-count{color:rgba(255,255,255,.9)}.bp-cap,.bp-controls{transition:opacity .3s}@keyframes bp-fadein{from{opacity:.01}to{opacity:1}}@keyframes bp-bar{from{transform:translateX(-100%)}to{transform:translateX(0)}}@keyframes bp-o{from{transform:rotate(0)}to{transform:rotate(360deg)}}.bp-wrap{position:fixed;z-index:999;touch-action:none;-webkit-tap-highlight-color:transparent}.bp-img,.bp-img-wrap,.bp-inner,.bp-vid audio{position:absolute}.bp-wrap>div:first-child{position:absolute;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,.75);animation:.48s cubic-bezier(.215,.61,.355,1) bp-fadein; display: block}.bp-vid audio{left:14px;width:calc(100% - 28px);bottom:14px;height:50px}.bp-inner{top:0;left:0;width:100%;height:100%;display:flex}.bp-html{display:contents}.bp-html>:first-child{margin:auto}.bp-img-wrap.bp-drag .bp-img{cursor:grabbing}.bp-img,.bp-noclose:not(.bp-zoomed) .bp-img-wrap{cursor:zoom-in}.bp-close{contain:layout size}.bp-img{top:50%;left:50%;user-select:none;background-size:100% 100%}.bp-controls,.bp-img div,.bp-img img{top:0;width:100%;position:absolute;height:100%}.bp-img div,.bp-img img{left:0}.bp-img .bp-o,.bp-noclose .bp-x{display:none}.bp-zoomed .bp-img{cursor:grab}.bp-zoomed .bp-cap{opacity:0;animation:none!important}.bp-zoomed.bp-small .bp-controls{opacity:0}.bp-controls{left:0;text-align:left;animation:.3s bp-fadein}.bp-controls button{pointer-events:auto;cursor:pointer;position:absolute;border:0;background:rgba(0,0,0,.15);opacity:.9;transition:.1s;contain:content}.bp-controls button:hover{background-color:rgba(0,0,0,.2);opacity:1}.bp-controls svg{fill:#fff}.bp-count{position:absolute;line-height:1;margin:16px;height:50px;width:100px}.bp-next,.bp-prev{top:50%;right:0;margin-top:-32px;height:64px;width:58px;border-radius:3px 0 0 3px}.bp-next:hover:before,.bp-prev:hover:before{transform:translateX(-2px)}.bp-next:before,.bp-prev:before{content:url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='%23fff'%3E%3Cpath d='M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z'/%3E%3C/svg%3E");position:absolute;left:7px;top:9px;width:46px;transition:.2s}.bp-prev{right:auto;left:0;transform:scalex(-1)}.bp-x{top:0;right:0;height:55px;width:58px;border-radius:0 0 0 3px}.bp-x:before{content:url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32' fill='%23fff'%3E%3Cpath d='M24 10l-2-2-6 6-6-6-2 2 6 6-6 6 2 2 6-6 6 6 2-2-6-6z'/%3E%3C/svg%3E");position:absolute;width:37px;top:8px;right:10px}.bp-if,.bp-vid{position:relative;margin:auto;background:0 0/100% 100% #000}.bp-bar,.bp-cap,.bp-inline{position:absolute}.bp-if div,.bp-if iframe,.bp-if video,.bp-vid div,.bp-vid iframe,.bp-vid video{top:0;left:0;width:100%;height:100%;position:absolute;border:0}.bp-load{display:flex;background-size:100% 100%;overflow:hidden;z-index:1}.bp-bar{top:0;left:0;height:3px;width:100%;transform:translateX(-100%);background:rgba(255,255,255,.9);border-radius:0 3px 3px 0;animation:4s both bp-bar}.bp-o,.bp-o:after{border-radius:50%;width:90px;height:90px}.bp-o{margin:auto;border:10px solid rgba(255,255,255,.2);border-left-color:rgba(255,255,255,.9);animation:1s linear infinite bp-o}.bp-cap{bottom:2%;background:rgba(9,9,9,.8);border-radius:4px;max-width:95%;line-height:1.3;padding:.6em 1.2em;left:50%;transform:translateX(-50%);width:fit-content;width:-moz-fit-content;display:table;animation:.2s bp-fadein}.bp-cap a{color:inherit}.bp-lock{overflow-y:hidden}.bp-lock body{overflow:scroll}.bp-noclose:not(.bp-zoomed){touch-action:pan-y}@media (prefers-reduced-motion){.bp-wrap *{animation-duration:0s!important}}@media (max-width:500px){.bp-x{height:47px;width:47px}.bp-x:before{width:34px;top:6px;right:6px}.bp-next,.bp-prev{margin-top:-27px;height:54px;width:45px}.bp-next:before,.bp-prev:before{top:7px;left:2px;width:43px}.bp-o,.bp-o:after{border-width:6px;width:60px;height:60px}.bp-count{margin:12px 10px}}
{%- endif -%}

{%- if section.settings.override_theme_font != blank -%}
  {%- for font in font_array -%}
    {%- unless font contains 'error' -%}{{ font }}{%- endunless -%}
  {%- endfor -%}
  #DP--{{ section.id }} {
    --main-font: {{ section.settings.main_font.family }}, {{ section.settings.main_font.fallback_families }};
    --main-font-weight: {{ section.settings.main_font.weight }};
    --main-font-style: {{ section.settings.main_font.style }};
    --heading-font: {{ section.settings.heading_font.family }}, {{ section.settings.heading_font.fallback_families }};
    --heading-font-weight: {{ section.settings.heading_font.weight }};
    --heading-font-style: {{ section.settings.heading_font.style }};
  }
{%- endif -%}

#DP--{{ section.id }} {
  --slideshow-color: #FFFFFF;
  margin-top: {{ section.settings.outer_margin }}px;
  margin-bottom: {{ section.settings.outer_margin }}px;
}

#DP--{{ section.id }} .dsgn-pck__sizer {
  padding-top: {{ section.settings.inner_padding }}px;
  padding-bottom: {{ section.settings.inner_padding }}px;
  width: {{ section.settings.base_width }}%;
  max-width: {{ max_width }};
}

#DP--{{ section.id }} .dsgn-pck__background {
  background: {{ section.settings.background_color }};
}

#DP--{{ section.id }} .dsgn-pck__slide picture::after {
  content: '';
  display: block;
  position: absolute;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  z-index: 1;
}

#DP--{{ section.id }} .dsgn-pck__lightbox-true,
#DP--{{ section.id }} a.dsgn-pck__lightbox-true:not([href]) {
  cursor: zoom-in;
}

#DP--{{ section.id }} .dsgn-pck__slide {
  width: 100%;
}

#DP--{{ section.id }} .dsgn-pck__slideshow-with-text-wrap {
  display: grid;
  grid-template-columns: repeat(2, minmax(250px, 1fr));
}

#DP--{{ section.id }} .dsgn-pck__content-grid {
  display: grid;
}

#DP--{{ section.id }} .dsgn-pck__content-grid .dsgn-pck__inner-content {
  margin: unset;
}

#DP--{{ section.id }} .dsgn-pck__text p:last-of-type {
  margin-bottom: 1.2rem;
}

#DP--{{ section.id }} .dsgn-pck__content {
  padding: 20px;
  display: flex;
  justify-content: center;
  {%- if section.settings.override_theme_font != blank -%}
  font-family: var(--main-font);
  font-weight: var(--main-font-weight);
  font-style: var(--main-font-style);
  {%- endif -%}
  color: {{ section.settings.text_color }};
  background: {{ section.settings.text_background_color }};
}

#DP--{{ section.id }} .dsgn-pck__inner-content {
  width: min(80%, 100%);
  margin: auto;
}

#DP--{{ section.id }} .dsgn-pck__text p {
  line-height: calc(3px + 3ex + 3px);
  font-size: calc(var(--dp-g-body-size, var(--dp-body-size, 18px)) * {{ section.settings.text_size | times: 0.01 }});
  {%- if section.settings.override_theme_font != blank -%}
  font-family: var(--main-font);
  font-weight: var(--main-font-weight);
  font-style: var(--main-font-style);
  {%- endif -%}
}

/* Slideshow styles */
#DP--{{ section.id }} .dsgn-pck__inner-content--slideshow .dsgn-pck__heading {
  line-height: calc(3px + 2ex + 3px);
  font-size: calc(var(--dp-g-heading-size, var(--dp-heading-size, 35px)) * {{ section.settings.text_size | times: 0.01 }});
  {%- if section.settings.override_theme_font != blank -%}
  font-family: var(--heading-font);
  font-weight: var(--heading-font-weight);
  font-style: var(--heading-font-style);
  {%- endif -%}
}

#DP--{{ section.id }} .dsgn-pck__inner-content--slideshow .dsgn-pck__heading + .dsgn-pck__text {
  margin-top: calc(10px * {{ section.settings.text_size | times: 0.015 }});
}

#DP--{{ section.id }} .dsgn-pck__inner-content--slideshow .dsgn-pck__text + .dsgn-pck__button {
  margin-top: calc(10px * {{ section.settings.text_size | times: 0.02 }});
}

#DP--{{ section.id }} .dsgn-pck__inner-content--slideshow .dsgn-pck__button {
  margin-top: 1.2em;
  border-color: transparent;
  display: inline-block;
  text-decoration: none;
  padding: 0.5em 1.2em;
  transition: all 0.3s ease-in-out;
  border: thin solid;
  border-radius: {{ section.settings.button_radius }}px;
  border-color: {%- if button_alpha != 0 -%}{{ section.settings.button_background_color }}{%- else -%}{{ section.settings.button_label_color }}{%- endif -%};
  font-size: calc(var(--dp-g-body-size, var(--dp-body-size, 18px)) * {{ section.settings.text_size | times: 0.01 }});
  color: {{ section.settings.button_label_color }};
  background-color: {{ section.settings.button_background_color }};
  {%- if section.settings.override_theme_font != blank -%}
  font-family: var(--main-font);
  font-weight: var(--main-font-weight);
  font-style: var(--main-font-style);
  {%- endif -%}
}

#DP--{{ section.id }} .dsgn-pck__inner-content--slideshow .dsgn-pck__button:hover {
  opacity: 1;
  {%- if button_alpha != 0 -%}
  background-color: {{ section.settings.button_background_color | color_darken: 10 }};
  border-color: transparent;
  {%- else -%}
  background-color: {{ section.settings.button_label_color | color_modify: 'alpha', 0.1 }}
  {%- endif -%};
}

#DP--{{ section.id }} .dsgn-pck__inner-content--slideshow .dsgn-pck__button::after {
  display: none;
}

#DP--{{ section.id }} .dsgn-pck__slideshow-content {
  padding: 40px 0;
  display: flex;
  justify-content: center;
  background: {{ section.settings.text_background_color }};
}

#DP--{{ section.id }} .dsgn-pck__button--slideshow {
  margin-top: 10px;
}

#DP--{{ section.id }} .flickity-page-dots {
  bottom: 10px;
}

#DP--{{ section.id }} .flickity-page-dots li:only-child {
  display: none;
}

#DP--{{ section.id }} .flickity-page-dots .dot {
  background: var(--slideshow-color);
  transition: all 0.3s ease-in-out;
}

#DP--{{ section.id }} .flickity-button {
  background: transparent;
  color: var(--slideshow-color);
  transition: all 0.3s ease-in-out;
}

#DP--{{ section.id }} .flickity-button[disabled] {
  display: none;
}

#DP--{{ section.id }} .dsgn-pck__block {
  color: {{ section.settings.text_color }};
}

#DP--{{ section.id }} .dsgn-pck__block + .dsgn-pck__block {
  margin-top: 15px;
}

{%- if section.settings.custom_css != blank -%}
  {%- assign custom_section_declarations = section.settings.custom_css | split: '}' -%}
  {%- for declaration in custom_section_declarations -%}
    {%- if declaration contains '{' -%}
      #DP--{{ section.id }} {{ declaration }} }
    {%- endif -%}
  {%- endfor -%}
{%- endif -%}

/* Animation */
{%- if section.settings.animation != 'none' -%}
  #DP--{{ section.id }}.dsgn-pck__animation-applied [style*="--dsgn-pck-animate"] {
    animation-name: dsgn-pck__animation--{{ section.settings.animation }};
  }
{%- else -%}
  #DP--{{ section.id }} [style*="--dsgn-pck-animate"] {
    opacity: 1;
  }
{% endif %}

{%- if section.settings.custom_css != blank -%}
  {%- assign custom_section_declarations = section.settings.custom_css | split: '}' -%}
  {%- for declaration in custom_section_declarations -%}
    {%- if declaration contains '{' -%}
      #DP--{{ section.id }} {{ declaration }} }
    {%- endif -%}
  {%- endfor -%}
{%- endif -%}

/* Landscape phones and down */
@media (max-width: 480px) {
  #DP--{{ section.id }} {
    margin-top: {{ section.settings.outer_margin | divided_by: 2 }}px;
    margin-bottom: {{ section.settings.outer_margin | divided_by: 2 }}px;
  }

  #DP--{{ section.id }} .dsgn-pck__sizer {
    padding-top: {{ section.settings.inner_padding | divided_by: 2 }}px;
    padding-bottom: {{ section.settings.inner_padding | divided_by: 2 }}px;
  }

  #DP--{{ section.id }} .dsgn-pck__slideshow-with-text-wrap {
    grid-template-columns: repeat(1, minmax(250px, 1fr));
  }

  #DP--{{ section.id }} .dsgn-pck__inner-content {
    width: unset;
    margin: auto;
  }

  {%- if section.settings.mobile_custom_css != blank -%}
    {%- assign mobile_custom_declarations = section.settings.mobile_custom_css | split: '}' -%}
    {%- for declaration in mobile_custom_declarations -%}
      {%- if declaration contains '{' -%}
        #DP--{{ section.id }} {{ declaration }} }
      {%- endif -%}
    {%- endfor -%}
  {%- endif -%}
}
</style>

{%- comment -%} HTML {%- endcomment -%}
<section id="DP--{{ section.id }}" class="DP--{{ section.id }} dsgn-pck__slideshow-with-text dsgn-pck__section">
  <div class="dsgn-pck__background">
    <div class="dsgn-pck__slideshow-with-text-wrap
                dsgn-pck__sizer
                dsgn-pck__grid
                {% if section.settings.image_position == 'right' -%}
                  dsgn-pck__grid-reverse
                {%- endif -%}">
      <div id="slideshow-{{ section.id }}" style="--dsgn-pck-animate: {{ forloop.index }};">
        {%- for block in section.blocks -%}
          {% unless block.type == 'slide' %}
            {% continue %}
          {% endunless %}
          {%- if block.settings.background_image == blank and section.settings.enable_metafield_detect == true -%}
            {%- continue -%}
          {%- endif -%}
          {%- comment -%} Color: check if color is set to transparent {%- endcomment -%}
          {%- assign button_alpha = block.settings.button_background_color | color_extract: 'alpha' -%}

          {%- comment -%} Images: all placeholders {%- endcomment -%}
          {%- capture placeholder_url -%}
            https://source.unsplash.com/{% cycle "8hAsLeE6Fbo/1000x1500", "n84s3jgzhKk/1000x1500", "nyrSsBzhZ4Y/1000x1500" %}
          {%- endcapture -%}
          {%- assign placeholder_width = placeholder_url | split: '/' | last | split: 'x' | first -%}
          {%- assign placeholder_height = placeholder_url | split: '/' | last | split: 'x' | last -%}

          {%- comment -%} Images: check image crop aspect ratio {%- endcomment -%}
          {%- if section.settings.image_crop == 'none' -%}
            {%- assign image_crop_width = block.settings.background_image.width | default: '1000' -%}
            {%- assign image_crop_height = block.settings.background_image.height | default: '1500' -%}
          {%- else -%}
            {%- assign image_crop_width = section.settings.image_crop | split: ':' | first | times: 1000 -%}
            {%- assign image_crop_height = section.settings.image_crop | split: ':' | last | times: 1000 -%}
          {%- endif -%}

          {%- assign mobile_image_crop_width = block.settings.mobile_background_image.width | default: image_crop_width -%}
          {%- assign mobile_image_crop_height = block.settings.mobile_background_image.height | default: image_crop_height -%}

          {%- comment -%} Text: check text position {%- endcomment -%}
          {%- assign vertical_text_position = block.settings.text_position | split: ' ' | last -%}

          <div id="DP--{{ block.id }}" class="dsgn-pck__slide dsgn-pck__background" {{ block.shopify_attributes }} data-slideshow-index="{{ forloop.index0 }}" data-slideshow-color="{{ block.settings.text_color }}">
            {%- if section.settings.enable_lightbox == true or section.settings.button_label == blank and section.settings.button_link != blank -%}
              <a {% if section.settings.button_link != blank and section.settings.enable_lightbox == false %}href="{{ section.settings.link }}"{% else %}href="#"{% endif %}
                class="dsgn-pck__absolute-link dsgn-pck__lightbox-{{ section.settings.enable_lightbox }}"
                data-dsgn-pck-lightbox="{{ section.settings.enable_lightbox }}"
                data-img="{%- if block.settings.background_image != blank -%}{{ block.settings.background_image | image_url: width: 5000 }}{%- else -%}{{ placeholder_url }}{%- endif -%}"
                data-alt="{{ block.settings.background_image.alt }}"
                data-height="{{ placeholder_height }}"
                data-width="{{ placeholder_width }}"
              >{{ section.settings.background_image.alt }}</a>
            {% endif %}
            <style>
              #DP--{{ block.id }} .dsgn-pck__image__wrapper img {
                object-position: {{ block.settings.focal_point }};
              }

              #DP--{{ block.id }} .dsgn-pck__inner-content {
                max-width: {{ block.settings.text_width }}px;
                color: {{ block.settings.text_color }};
                background: {{ block.settings.text_background_color }};
                padding: {%- if block.settings.text_background_color != blank -%}clamp(10px, 5%, 40px){%- endif -%};
              }

              #DP--{{ block.id }} .dsgn-pck__button {
                border-color: {%- if button_alpha != 0 -%}{{ block.settings.button_background_color }}{%- else -%}{{ block.settings.button_label_color }}{%- endif -%};
                color: {{ block.settings.button_label_color }};
                background-color: {{ block.settings.button_background_color }};
              }

              #DP--{{ block.id }} .dsgn-pck__button:hover {
                {%- if button_alpha != 0 -%}
                background-color: {{ block.settings.button_background_color | color_modify: 'alpha', 0.8 }};
                border-color: transparent;
                {%- else -%}
                background-color: {{ block.settings.button_label_color | color_modify: 'alpha', 0.1 }}
                {%- endif -%};
              }

              #DP--{{ block.id }} picture {
                z-index: 0;
              }

              #DP--{{ block.id }} picture::after {
                background: {{ block.settings.background_color }};
              }

            </style>
            <div class="dsgn-pck__image__wrapper">
              <svg class="dsgn-pck__mobile--hidden" viewBox="0 0 {{ image_crop_width }} {{ image_crop_height }}"></svg>
              <svg class="dsgn-pck__mobile--visible dsgn-pck__desktop--hidden" viewBox="0 0 {{ mobile_image_crop_width }} {{ mobile_image_crop_height }}"></svg>
              <picture>
              {%- if block.settings.background_image != blank -%}
                {%- if block.settings.mobile_background_image != blank -%}
                  <source media="(max-width: 480px)" srcset="{{ block.settings.mobile_background_image | image_url: width: 960 }}">
                {%- endif -%}
                  {%- capture sizes -%}
                    (max-width: 480px) {{ section.settings.base_width | at_least: 70 | append: 'vw' }}, {{ section.settings.base_width | divided_by: 2 | append: 'vw' }}
                  {%- endcapture -%}
                  {{ block.settings.background_image | image_url: width: 5000 | image_tag: loading: 'lazy', widths: widths, sizes: sizes }}
              {%- else -%}
                <img src="{{ placeholder_url }}"
                    alt=""
                    height="{{ placeholder_height }}"
                    width="{{ placeholder_width }}"
                    loading="lazy">
              {%- endif -%}
              </picture>
              <div class="dsgn-pck__content-grid">
                <div class="dsgn-pck__slideshow-content
                            dsgn-pck__flex dsgn-pck__flex
                            dsgn-pck__align-{{ vertical_text_position }}
                            dsgn-pck__text-alignment-{{ block.settings.text_alignment }}">
                  <div class="dsgn-pck__inner-content dsgn-pck__relative dsgn-pck__inner-content--slideshow">
                    {%- if block.settings.preheading != blank -%}
                      <p class="dsgn-pck__small-text dsgn-pck__rte dsgn-pck__small-text--slideshow">
                        {{ block.settings.preheading }}
                      </p>
                    {%- endif -%}
                    {%- if block.settings.title != blank -%}
                      <h2 class="dsgn-pck__heading dsgn-pck__heading--slideshow">
                        {{ block.settings.title }}
                      </h2>
                    {%- endif -%}
                    {%- if block.settings.text != blank -%}
                      <div class="dsgn-pck__text dsgn-pck__rte dsgn-pck__text--slideshow">
                        {{ block.settings.text }}
                      </div>
                    {%- endif -%}
                    {%- if block.settings.button_label != blank -%}
                      <a class="dsgn-pck__button dsgn-pck__button--slideshow" {%- if block.settings.link != blank -%}href="{{ block.settings.link }}"{%- endif -%}>{{ block.settings.button_label }}</a>
                    {%- endif -%}
                  </div>
                </div>
              </div>
            </div>
          </div>
        {%- endfor -%}
      </div>
      <div class="dsgn-pck__content dsgn-pck__flex dsgn-pck__justify-{{ section.settings.text_alignment }}" style="--dsgn-pck-animate: 1;">
        <div class="dsgn-pck__inner-content">
          {%- for block in section.blocks -%}
            <div id="DP--{{ block.id }}" class="dsgn-pck__block dsgn-pck__block-id-{{ block.id }} dsgn-pck__block--{{ block.type }} dsgn-pck__block--{{ forloop.index }}" {{ block.shopify_attributes }} style="--dsgn-pck-animate: {{ forloop.index }};">
              {%- case block.type -%}
                {%- when '@app' -%}
                  {% render block %}
                {%- when 'liquid' -%}
                  {{ block.settings.liquid }}
                {%- when 'list' -%}
                  <style>
                    .dsgn-pck__block-id-{{ block.id }} .dsgn-pck__list {
                      margin: 0;
                      {%- case block.settings.list_style -%}
                        {%- when 'decimal' -%}
                          list-style: decimal;
                        {%- when 'square' -%}
                          list-style: square;
                        {%- when 'circle' -%}
                          list-style: circle;
                        {%- else -%}
                          list-style: inherit;
                      {%- endcase -%}
                    }
                  </style>
                  {%- assign list = block.settings.text | split: '**' -%}
                  <div class="dsgn-pck__list-wrapper dsgn-pck__rte">
                    <ul class="dsgn-pck__list dsgn-pck__text-alignment-left">
                      {%- for list_item in list -%}
                        {%- if forloop.first == false -%}
                          <li>{{ list_item }}</li>
                        {%- endif -%}
                      {%- endfor -%}
                    </ul>
                  </div>
                {%- when 'icons' -%}
                  <style>
                    .dsgn-pck__block-id-{{ block.id }} .dsgn-pck__icons {
                      gap: {{ block.settings.gap }}px;
                      align-items: flex-start;
                      flex-wrap: wrap;
                    }

                    .dsgn-pck__block-id-{{ block.id }} .dsgn-pck__icon {
                      text-align: center;
                      flex-basis: calc({{ block.settings.icon_width }}% - {{ block.settings.gap | divided_by: 2.0 }}px);
                    }

                    .dsgn-pck__block-id-{{ block.id }} .dsgn-pck__icon a,
                    .dsgn-pck__block-id-{{ block.id }} .dsgn-pck__icon p {
                      color: {{ section.settings.text_color }};
                      line-height: 1.2;
                      margin: 0;
                      text-decoration: none;
                      font-size: calc(var(--dp-g-body-size, var(--dp-body-size, 18px)) * {{ section.settings.text_size | times: 0.007 }});
                    }

                    .dsgn-pck__block-id-{{ block.id }} .dsgn-pck__icon img {
                      width: {{ block.settings.image_size }}%;
                      height: auto;
                      display: inline-block;
                    }

                    @media (max-width: 480px) {
                      .dsgn-pck__block-id-{{ block.id }} .dsgn-pck__icon {
                        flex-grow: 1;
                      }
                    }
                  </style>
                  <div class="dsgn-pck__flex dsgn-pck__icons dsgn-pck__justify-{{ section.settings.text_alignment }}">
                    {%- for index in (1..4) -%}
                      {%- capture icon -%}icon_{{ forloop.index }}{%- endcapture -%}
                      {%- capture text -%}text_{{ forloop.index }}{%- endcapture -%}
                      {%- capture link -%}link_{{ forloop.index }}{%- endcapture -%}
                      {%- if block.settings[icon] != blank -%}
                        <div class="dsgn-pck__flex-item dsgn-pck__icon">
                          {%- if block.settings[link] != blank -%}
                            <a href="{{ block.settings[link] }}">
                          {%- endif -%}
                            {{ block.settings[icon] | image_url: width: 800 | image_tag: loading: 'lazy' }}
                            <p class="dsgn-pck__icon-text">
                              {{ block.settings[text] }}
                            </p>
                          {%- if block.settings[link] != blank -%}
                            </a>
                          {%- endif -%}
                        </div>
                      {%- endif -%}
                    {%- endfor -%}
                  </div>
                {%- when 'text_columns' -%}
                  <style>
                    .dsgn-pck__block-id-{{ block.id }} .dsgn-pck__columns {
                      gap: {{ block.settings.gap }}px;
                    }
                  </style>
                  <div class="dsgn-pck__flex dsgn-pck__columns dsgn-pck__flex--2-per-row dsgn-pck__justify-{{ block.settings.text_alignment }}">
                    {%- for index in (1..2) -%}
                      {%- capture heading -%}heading_{{ forloop.index }}{%- endcapture -%}
                      {%- capture column -%}column_{{ forloop.index }}{%- endcapture -%}
                      <div class="dsgn-pck__flex-item">
                        {%- if block.settings[heading] != blank -%}
                          <h3 class="dsgn-pck__small-heading dsgn-pck__column-heading">{{ block.settings[heading] }}</h3>
                        {%- endif -%}
                        {%- if block.settings[column] != blank -%}
                          {{ block.settings[column] }}
                        {%- endif -%}
                    </div>
                    {%- endfor -%}
                  </div>
                {%- when 'countdown_timer' -%}
                  {%- comment -%} Schedule: timezone value {%- endcomment -%}
                  {%- assign timezone = block.settings.timezone | split: '~' | first | strip -%}
                  <style>
                    .dsgn-pck__block-id-{{ block.id }} .dsgn-pck__clock-wrap {
                      max-width: 450px;
                      flex: 1 0 auto;
                      margin: 0 auto;
                    }

                    .dsgn-pck__block-id-{{ block.id }} .dsgn-pck__clock {
                      grid-template-columns: repeat(4, minmax(0, 1fr));
                      text-transform: uppercase;
                      font-weight: bold;
                      letter-spacing: 1px;
                      {%- if section.settings.override_theme_font != blank -%}
                      font-family: var(--main-font);
                      font-weight: var(--main-font-weight);
                      font-style: var(--main-font-style);
                      {%- endif -%}
                      color: {{ section.settings.text_color }};
                      border: thin solid {{ section.settings.text_color }};
                      font-size: calc(var(--dp-g-body-size, var(--dp-body-size, 18px)) * {{ section.settings.text_size | times: 0.01 }});
                    }

                    .dsgn-pck__block-id-{{ block.id }} .dsgn-pck__measurement {
                      display: flex;
                      flex-direction: column;
                      align-items: center;
                      padding: 8px 20px;
                      border-left: thin solid {{ section.settings.text_color }};
                    }

                    .dsgn-pck__block-id-{{ block.id }} .dsgn-pck__measurement:first-child {
                      border-left: none;
                    }

                    .dsgn-pck__block-id-{{ block.id }} .dsgn-pck__number {
                      width: 100%;
                      text-align: center;
                      font-weight: bold;
                      padding: 5px 0;
                      font-size: 1.5em;
                      min-height: 2em;
                      display: flex;
                      justify-content: center;
                      align-items: center;
                    }

                    .dsgn-pck__block-id-{{ block.id }} .dsgn-pck__label {
                      font-size: clamp(9px, 0.5em, 45px);
                      padding: 0.5em 0.8em;
                    }
                  </style>
                  <div class="dsgn-pck__clock-wrap"
                    data-timer-start="{{ block.settings.start_month }} {{ block.settings.start_day }} {{ block.settings.start_year }} {{ block.settings.start_time }} {{ timezone }}"
                    data-timer-end="{{ block.settings.end_month }} {{ block.settings.end_day }} {{ block.settings.end_year }} {{ block.settings.end_time }} {{ timezone }}">
                      <div class="dsgn-pck__clock dsgn-pck__grid">
                        <div class="dsgn-pck__measurement dsgn-pck__days">
                          <span class="dsgn-pck__number">--</span>
                          <span class="dsgn-pck__label">{{ 'days' | t }}</span>
                        </div>
                        <div class="dsgn-pck__measurement dsgn-pck__hours">
                          <span class="dsgn-pck__number">--</span>
                          <span class="dsgn-pck__label">{{ 'hours' | t }}</span>
                        </div>
                        <div class="dsgn-pck__measurement dsgn-pck__minutes">
                          <span class="dsgn-pck__number">--</span>
                          <span class="dsgn-pck__label">{{ 'minutes' | t }}</span>
                        </div>
                        <div class="dsgn-pck__measurement dsgn-pck__seconds">
                          <span class="dsgn-pck__number dsgn-pck__seconds">--</span>
                          <span class="dsgn-pck__label dsgn-pck__seconds-text">{{ 'seconds' | t }}</span>
                        </div>
                      </div>
                  </div>
                {%- when 'inset_image' -%}
                  <style>
                    .dsgn-pck__block-id-{{ block.id }} .dsgn-pck__image__wrapper {
                      width: {{ block.settings.inset_image_size }}%;
                      display: inline-block;
                    }

                    .dsgn-pck__block-id-{{ block.id }} .dsgn-pck__image__wrapper svg {
                      width: 100%;
                    }

                    .dsgn-pck__block-id-{{ block.id }} .dsgn-pck__image__wrapper path {
                      fill: {{ section.settings.text_color }};
                    }

                    .dsgn-pck__block-id-{{ block.id }} .dsgn-pck__item img {
                      width: 100%;
                      object-fit: contain;
                    }
                  </style>
                  {%- capture placeholder_image -%}
                    <svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M15.651 12.851c-2.13 1.94-5.17 2.91-9.07 2.91-.91 0-1.87-.04-2.88-.17-.38.86-.6 1.71-.6 2.51 0 .55-.45 1-1 1s-1-.45-1-1c0-.24.01-.48.04-.72.02-.13.03-.26.06-.39.18-1.13.64-2.27 1.29-3.39 2.32-4.02 9.3-8.68 12.61-9.5-4.76-.03-12 3-13.91 6.93 0-2.89 2.3-6.42 5.46-8.38 4.54-2.82 10.47-1.14 12.06 0 .23.16.37.42.38.7.08 2.31-.25 6.62-3.44 9.5z" fill="#5C5F62"/></svg>
                  {%- endcapture -%}
                  <div class="dsgn-pck__inset-image dsgn-pck__flex dsgn-pck__justify-{%- if block.settings.image_alignment != 'default' -%}{{ block.settings.image_alignment }}{%- else -%}{{ section.settings.text_alignment }}{%- endif -%}">
                    {%- if block.settings.inset_image != blank -%}
                      <div class="dsgn-pck__image__wrapper">
                        <svg viewBox="0 0 {{ block.settings.inset_image.width }} {{ block.settings.inset_image.height }}"></svg>
                        {{ block.settings.inset_image | image_url: width: 1000 | image_tag: loading: 'lazy' }}
                      </div>
                    {%- else -%}
                      <div class="dsgn-pck__image__wrapper">
                        {{ placeholder_image | strip }}
                      </div>
                    {%- endif -%}
                  </div>
                {%- when 'divider' -%}
                  <style>
                    .dsgn-pck__block-id-{{ block.id }} {
                      padding-top: {{ block.settings.padding_top }}px;
                      padding-bottom: {{ block.settings.padding_bottom }}px;
                    }

                    .dsgn-pck__block-id-{{ block.id }} .dsgn-pck__divider {
                      height: 0;
                      border: none;
                      background: transparent;
                      {%- if section.settings.text_alignment == 'left' -%}
                        margin: 0;
                      {%- elsif section.settings.text_alignment == 'right' -%}
                        margin: 0 0 0 auto;
                      {%- else -%}
                        margin: 0 auto;
                      {%- endif -%}
                      width: {{ block.settings.base_width }}%;
                      border-top: {{ block.settings.thickness }}px {{ block.settings.style }} {{ block.settings.divider_color }};
                    }
                  </style>
                  <hr class="dsgn-pck__divider" aria-hidden="true">

                {%- when 'small_text' -%}
                  {%- if block.settings.small_text != blank -%}
                    <div class="dsgn-pck__small-text dsgn-pck__rte">
                      {{ block.settings.small_text }}
                    </div>
                  {%- endif -%}
                {%- when 'heading' -%}
                  <style>
                    .dsgn-pck__block-id-{{ block.id }} .dsgn-pck__heading {
                      margin: 0;
                      line-height: calc(3px + 2ex + 3px);
                      font-size: calc(var(--dp-g-heading-size, var(--dp-heading-size, 35px)) * {{ section.settings.text_size | times: 0.01 }});
                      {%- if section.settings.override_theme_font != blank -%}
                      font-family: var(--heading-font);
                      font-weight: var(--heading-font-weight);
                      font-style: var(--heading-font-style);
                      {%- endif -%}
                    }
                  </style>
                  {%- if block.settings.title != blank -%}
                    <{{- block.settings.heading_level }} class="dsgn-pck__heading">
                      {{ block.settings.title | newline_to_br }}
                    </{{- block.settings.heading_level -}}>
                  {%- endif -%}
                {%- when 'text' -%}
                  {%- if block.settings.text != blank -%}
                    <div class="dsgn-pck__text dsgn-pck__rte">
                      {{ block.settings.text }}
                    </div>
                  {%- endif -%}
                {%- when 'buttons' -%}
                  <style>
                    {%- assign button_alpha_primary = block.settings.button_background_color_primary | color_extract: 'alpha' -%}
                    {%- assign button_alpha_secondary = block.settings.button_background_color_secondary | color_extract: 'alpha' -%}

                    .dsgn-pck__block-id-{{ block.id }} .dsgn-pck__button-area {
                      display: grid;
                      grid-gap: 1.3em;
                      {%- if section.settings.text_alignment == 'center' -%}
                        margin: 0 auto;
                      {%- elsif section.settings.text_alignment == 'right' -%}
                        margin: 0 0 0 auto;
                      {%- else -%}
                      {%- endif -%}
                      {%- if block.settings.button_label_primary != blank and block.settings.button_label_secondary != blank -%}
                        grid-template-columns: repeat(2, 1fr);
                      {%- else -%}
                        grid-template-columns: 1fr;
                        max-width: 200px;
                      {%- endif -%}
                      max-width: 100%;
                      width: fit-content;
                    }

                    .dsgn-pck__block-id-{{ block.id }} .dsgn-pck__button {
                      display: flex;
                      justify-content: center;
                      align-items: center;
                      text-align: center;
                      text-decoration: none;
                      padding: 0.5em 1.2em;
                      margin-top: 0;
                      border: thin solid;
                      transition: all 0.3s ease-in-out;
                      border-radius: {{ block.settings.button_radius }}px;
                      line-height: calc(3px + 2ex + 3px);
                      font-size: calc(var(--dp-g-body-size, var(--dp-body-size, 18px)) * {{ section.settings.text_size | times: 0.01 }});
                      {%- if section.settings.override_theme_font != blank -%}
                      font-family: var(--main-font);
                      font-weight: var(--main-font-weight);
                      font-style: var(--main-font-style);
                      {%- endif -%}
                    }

                    .dsgn-pck__block-id-{{ block.id }} .dsgn-pck__button-primary {
                      color: {{ block.settings.button_label_color_primary }};
                      border-color: {%- if button_alpha_primary != 0 -%}{{ block.settings.button_background_color_primary }}{%- else -%}{{ block.settings.button_label_color_primary }}{%- endif -%};
                      background-color: {{ block.settings.button_background_color_primary }};
                    }

                    .dsgn-pck__block-id-{{ block.id }} .dsgn-pck__button-secondary {
                      color: {{ block.settings.button_label_color_secondary }};
                      border-color: {%- if button_alpha_secondary != 0 -%}{{ block.settings.button_background_color_secondary }}{%- else -%}{{ block.settings.button_label_color_secondary }}{%- endif -%};
                      background-color: {{ block.settings.button_background_color_secondary }};
                    }

                    .dsgn-pck__block-id-{{ block.id }} .dsgn-pck__button-primary:hover {
                      opacity: 1;
                      {%- if button_alpha_primary != 0 -%}
                      background-color: {{ block.settings.button_background_color_primary | color_darken: 10 }};
                      border-color: transparent;
                      {%- else -%}
                      background-color: {{ block.settings.button_label_color_primary | color_modify: 'alpha', 0.1 }}
                      {%- endif -%};
                    }

                    .dsgn-pck__block-id-{{ block.id }} .dsgn-pck__button-secondary:hover {
                      opacity: 1;
                      {%- if button_alpha_secondary != 0 -%}
                      background-color: {{ block.settings.button_background_color_secondary | color_darken: 10 }};
                      border-color: transparent;
                      {%- else -%}
                      background-color: {{ block.settings.button_label_color_secondary | color_modify: 'alpha', 0.1 }}
                      {%- endif -%};
                    }

                    @media (max-width: 480px) {
                      .dsgn-pck__block-id-{{ block.id }} div.dsgn-pck__button-area {
                        grid-template-columns: 1fr;
                        width: 100%;
                        gap: 10px;
                      }
                    }
                  </style>
                  <div class="dsgn-pck__button-area">
                    {%- if block.settings.button_label_primary != blank -%}
                      <a class="dsgn-pck__button dsgn-pck__button-primary" {%- if block.settings.link_primary != blank -%} href="{{ block.settings.link_primary }}" {%- endif -%} {% if block.settings.external_link_primary %}target="_blank"{% endif %}>{{ block.settings.button_label_primary }}</a>
                    {%- endif -%}
                    {%- if block.settings.button_label_secondary != blank -%}
                      <a class="dsgn-pck__button dsgn-pck__button-secondary" {%- if block.settings.link_secondary != blank -%}href="{{ block.settings.link_secondary }}"{%- endif -%} {% if block.settings.external_link_secondary %}target="_blank"{% endif %}>{{ block.settings.button_label_secondary }}</a>
                    {%- endif -%}
                  </div>
              {%- endcase -%}
            </div>
          {%- endfor -%}
        </div>
      </div>
    </div>
  </div>
</section>
{%- endcapture -%}
{{ minify | strip_newlines }}

{% schema %}
{
  "name": "Slideshow with text",
  "class": "DP__slideshow-with-text",
  "blocks": [
    {
      "type": "slide",
      "name": "Slideshow image",
      "settings": [
        {
          "type": "text",
          "id": "preheading",
          "label": "Small text",
          "default": "Small Text"
        },
        {
          "type": "text",
          "id": "title",
          "label": "Heading",
          "default": "Slide Heading"
        },
        {
          "type": "richtext",
          "id": "text",
          "label": "Text"
        },
        {
          "type": "text",
          "id": "button_label",
          "label": "Button",
          "default": "Learn more"
        },
        {
          "type": "url",
          "id": "link",
          "label": "Link",
          "info": "Link is disabled when lightbox setting is enabled."
        },
        {
          "type": "select",
          "id": "text_alignment",
          "label": "Text alignment",
          "default": "left",
          "options": [
            {
              "value": "left",
              "label": "Left"
            },
            {
              "value": "center",
              "label": "Center"
            },
            {
              "value": "right",
              "label": "Right"
            }
          ]
        },
        {
          "type": "select",
          "id": "text_position",
          "label": "Vertical text position",
          "default": "center",
          "options": [
            {
              "value": "top",
              "label": "Top"
            },
            {
              "value": "center",
              "label": "Center"
            },
            {
              "value": "bottom",
              "label": "Bottom"
            }
          ]
        },
        {
          "type": "image_picker",
          "id": "background_image",
          "label": "Image"
        },
        {
          "type": "select",
          "id": "focal_point",
          "label": "Image focal point",
          "info": "Used to keep the subject of your photo in view.",
          "default": "center center",
          "options": [
            {
              "value": "20% 0",
              "label": "Top left"
            },
            {
              "value": "top center",
              "label": "Top center"
            },
            {
              "value": "80% 0",
              "label": "Top right"
            },
            {
              "value": "20% 50%",
              "label": "Left"
            },
            {
              "value": "center center",
              "label": "Center"
            },
            {
              "value": "80% 50%",
              "label": "Right"
            },
            {
              "value": "20% 100%",
              "label": "Bottom left"
            },
            {
              "value": "bottom center",
              "label": "Bottom center"
            },
            {
              "value": "80% 100%",
              "label": "Bottom right"
            }
          ]
        },
        {
          "type": "header",
          "content": "📱 Mobile"
        },
        {
          "type": "image_picker",
          "id": "mobile_background_image",
          "label": "Mobile image"
        },
        {
          "type": "header",
          "content": "🎨 Design"
        },
        {
          "type": "color",
          "id": "text_color",
          "label": "Text",
          "default": "#FFFFFF"
        },
        {
          "type": "color_background",
          "id": "text_background_color",
          "label": "Text background"
        },
        {
          "type": "color",
          "id": "button_label_color",
          "label": "Button label",
          "default": "#FFFFFF"
        },
        {
          "type": "color",
          "id": "button_background_color",
          "label": "Button background",
          "default": "#283144"
        },
        {
          "type": "color_background",
          "id": "background_color",
          "label": "Image overlay"
        }
      ]
    },
    {
      "type": "heading",
      "name": "Heading",
      "settings": [
        {
          "type": "text",
          "id": "title",
          "label": "Heading",
          "default": "Attention-grabbing headline"
        },
        {
          "type": "header",
          "content": "🚨 Advanced"
        },
        {
          "type": "select",
          "id": "heading_level",
          "label": "Heading level",
          "options": [
            {
              "value": "h1",
              "label": "h1"
            },
            {
              "value": "h2",
              "label": "h2"
            },
            {
              "value": "h3",
              "label": "h3"
            },
            {
              "value": "h4",
              "label": "h4"
            },
            {
              "value": "h5",
              "label": "h5"
            },
            {
              "value": "h6",
              "label": "h6"
            }
          ],
          "default": "h2",
          "info": "The most important heading has the rank 1 (<h1>) and the least important heading has rank 6 (<h6>). Only use one h1 on a page."
        }
      ]
    },
    {
      "type": "divider",
      "name": "Divider",
      "settings": [
        {
          "type": "range",
          "id": "base_width",
          "label": "Width",
          "min": 20,
          "max": 100,
          "step": 5,
          "default": 50,
          "unit": "%"
        },
        {
          "type": "range",
          "id": "thickness",
          "label": "Thickness",
          "min": 0,
          "max": 10,
          "default": 1,
          "unit": "px"
        },
        {
          "type": "select",
          "id": "style",
          "label": "Style",
          "default": "solid",
          "options": [
            {
              "value": "solid",
              "label": "Solid line"
            },
            {
              "value": "dotted",
              "label": "Dotted line"
            },
            {
              "value": "dashed",
              "label": "Dashed line"
            },
            {
              "value": "double",
              "label": "Double line"
            }
          ]
        },
        {
          "type": "header",
          "content": "🎨 Design"
        },
        {
          "type": "color",
          "id": "divider_color",
          "label": "Color",
          "default": "#FFFFFF"
        },
        {
          "type": "header",
          "content": "🖼 Layout"
        },
        {
          "type": "range",
          "id": "padding_top",
          "label": "Padding - top",
          "min": 0,
          "max": 100,
          "default": 40,
          "step": 5,
          "unit": "px"
        },
        {
          "type": "range",
          "id": "padding_bottom",
          "label": "Padding - bottom",
          "min": 0,
          "max": 100,
          "default": 40,
          "step": 5,
          "unit": "px"
        }
      ]
    },
    {
      "type": "text",
      "name": "Regular text",
      "settings": [
        {
          "type": "richtext",
          "id": "text",
          "label": "Text",
          "default": "<p>Drag and drop block options like heading, text, buttons, dividers, and more.</p>"
        }
      ]
    },
    {
      "type": "small_text",
      "name": "Small text",
      "settings": [
        {
          "type": "richtext",
          "id": "small_text",
          "label": "Small text",
          "default": "<p>New arrivals</p>"
        }
      ]
    },
    {
      "type": "list",
      "name": "List",
      "settings": [
        {
          "type": "richtext",
          "id": "text",
          "label": "List items",
          "default": "<p>** Important point number one</p><p>** Next point in the list</p>",
          "info": "Use two asterisks (**) to create a new list item"
        },
        {
          "type": "select",
          "id": "list_style",
          "label": "Style",
          "options": [
            {
              "value": "decimal",
              "label": "Numbered"
            },
            {
              "value": "square",
              "label": "Square"
            },
            {
              "value": "circle",
              "label": "Circle outline"
            },
            {
              "value": "inherit",
              "label": "Disc (default)"
            }
          ],
          "default": "inherit"
        }
      ]
    },
    {
      "type": "buttons",
      "name": "Buttons",
      "settings": [
        {
          "type": "range",
          "id": "button_radius",
          "label": "Button border radius",
          "min": 0,
          "max": 50,
          "step": 5,
          "default": 0,
          "unit": "px"
        },
        {
          "type": "header",
          "content": "Primary button"
        },
        {
          "type": "text",
          "id": "button_label_primary",
          "label": "Primary button",
          "default": "Learn more"
        },
        {
          "type": "url",
          "id": "link_primary",
          "label": "Primary link"
        },
        {
          "type": "checkbox",
          "id": "external_link_primary",
          "label": "Open primary link in a new window"
        },
        {
          "type": "color",
          "id": "button_label_color_primary",
          "label": "Primary button label",
          "default": "#121212"
        },
        {
          "type": "color",
          "id": "button_background_color_primary",
          "label": "Primary button background",
          "default": "rgba(0,0,0,0)"
        },
        {
          "type": "header",
          "content": "Secondary button"
        },
        {
          "type": "text",
          "id": "button_label_secondary",
          "label": "Secondary button",
          "default": "Shop now"
        },
        {
          "type": "url",
          "id": "link_secondary",
          "label": "Secondary link"
        },
        {
          "type": "checkbox",
          "id": "external_link_secondary",
          "label": "Open secondary link in a new window"
        },
        {
          "type": "color",
          "id": "button_label_color_secondary",
          "label": "Secondary button label",
          "default": "#FFFFFF"
        },
        {
          "type": "color",
          "id": "button_background_color_secondary",
          "label": "Secondary button background",
          "default": "#121212"
        }
      ]
    },
    {
      "type": "icons",
      "name": "Icons",
      "settings": [
        {
          "type": "range",
          "id": "icon_width",
          "min": 10,
          "max": 100,
          "label": "Icon width",
          "default": 25,
          "unit": "%"
        },
        {
          "type": "range",
          "id": "image_size",
          "min": 10,
          "max": 100,
          "label": "Image size",
          "default": 80,
          "unit": "%"
        },
        {
          "type": "range",
          "id": "gap",
          "min": 0,
          "max": 40,
          "label": "Spacing gap",
          "unit": "px",
          "default": 10
        },
        {
          "type": "header",
          "content": "Icon 1"
        },
        {
          "type": "image_picker",
          "id": "icon_1",
          "label": "Icon 1"
        },
        {
          "type": "text",
          "id": "text_1",
          "label": "Text 1"
        },
        {
          "type": "url",
          "id": "link_1",
          "label": "Link 1"
        },
        {
          "type": "header",
          "content": "Icon 2"
        },
        {
          "type": "image_picker",
          "id": "icon_2",
          "label": "Icon 2"
        },
        {
          "type": "text",
          "id": "text_2",
          "label": "Text 2"
        },
        {
          "type": "url",
          "id": "link_2",
          "label": "Link 2"
        },
        {
          "type": "header",
          "content": "Icon 3"
        },
        {
          "type": "image_picker",
          "id": "icon_3",
          "label": "Icon 3"
        },
        {
          "type": "text",
          "id": "text_3",
          "label": "Text 3"
        },
        {
          "type": "url",
          "id": "link_3",
          "label": "Link 3"
        },
        {
          "type": "header",
          "content": "Icon 4"
        },
        {
          "type": "image_picker",
          "id": "icon_4",
          "label": "Icon 4"
        },
        {
          "type": "text",
          "id": "text_4",
          "label": "Text 4"
        },
        {
          "type": "url",
          "id": "link_4",
          "label": "Link 4"
        }
      ]
    },
    {
      "type": "text_columns",
      "name": "Text columns",
      "settings": [
        {
          "type": "range",
          "id": "gap",
          "min": 0,
          "max": 40,
          "label": "Spacing gap",
          "unit": "px",
          "default": 10
        },
        {
          "type": "select",
          "id": "text_alignment",
          "label": "Text alignment",
          "default": "center",
          "options": [
            {
              "value": "left",
              "label": "Left"
            },
            {
              "value": "center",
              "label": "Center"
            },
            {
              "value": "right",
              "label": "Right"
            },
            {
              "value": "justify",
              "label": "Justify"
            }
          ]
        },
        {
          "type": "header",
          "content": "Column 1"
        },
        {
          "type": "text",
          "id": "heading_1",
          "label": "Heading"
        },
        {
          "type": "richtext",
          "id": "column_1",
          "label": "Text",
          "default": "<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris nibh enim, ornare at consequat sed, placerat quis libero. Curabitur id nulla ut nunc aliquam sodales.</p>"
        },
        {
          "type": "header",
          "content": "Column 2"
        },
        {
          "type": "text",
          "id": "heading_2",
          "label": "Heading"
        },
        {
          "type": "richtext",
          "id": "column_2",
          "label": "Text",
          "default": "<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris nibh enim, ornare at consequat sed, placerat quis libero. Curabitur id nulla ut nunc aliquam sodales.</p>"
        }
      ]
    },
    {
      "type": "inset_image",
      "name": "Image",
      "settings": [
        {
          "type": "image_picker",
          "id": "inset_image",
          "label": "Image"
        },
        {
          "type": "range",
          "id": "inset_image_size",
          "label": "Image size",
          "default": 10,
          "min": 5,
          "max": 100,
          "step": 5,
          "unit": "%"
        },
        {
          "type": "select",
          "id": "image_alignment",
          "label": "Image alignment",
          "default": "default",
          "options": [
            {
              "value": "left",
              "label": "Left"
            },
            {
              "value": "center",
              "label": "Center"
            },
            {
              "value": "right",
              "label": "Right"
            },
            {
              "value": "default",
              "label": "Default"
            }
          ]
        }
      ]
    },
    {
      "type": "countdown_timer",
      "name": "Countdown timer",
      "limit": 1,
      "settings": [
        {
          "type": "select",
          "id": "timezone",
          "label": "Timezone",
          "default": "-05:00 ~ (GMT-05:00) Eastern Time (US & Canada)",
          "options": [
            {
              "value": "-11:00 ~ (GMT-11:00) International Date Line West",
              "label": "(GMT-11:00) International Date Line West"
            },
            {
              "value": "-11:00 ~ (GMT-11:00) Midway Island",
              "label": "(GMT-11:00) Midway Island"
            },
            {
              "value": "-11:00 ~ (GMT-11:00) American Samoa",
              "label": "(GMT-11:00) American Samoa"
            },
            {
              "value": "-10:00 ~ (GMT-10:00) Hawaii",
              "label": "(GMT-10:00) Hawaii"
            },
            {
              "value": "-09:00 ~ (GMT-09:00) Alaska",
              "label": "(GMT-09:00) Alaska"
            },
            {
              "value": "-08:00 ~ (GMT-08:00) Pacific Time (US & Canada)",
              "label": "(GMT-08:00) Pacific Time (US & Canada)"
            },
            {
              "value": "-08:00 ~ (GMT-08:00) Tijuana",
              "label": "(GMT-08:00) Tijuana"
            },
            {
              "value": "-07:00 ~ (GMT-07:00) Mountain Time (US & Canada)",
              "label": "(GMT-07:00) Mountain Time (US & Canada)"
            },
            {
              "value": "-07:00 ~ (GMT-07:00) Arizona",
              "label": "(GMT-07:00) Arizona"
            },
            {
              "value": "-07:00 ~ (GMT-07:00) Chihuahua",
              "label": "(GMT-07:00) Chihuahua"
            },
            {
              "value": "-06:00 ~ (GMT-06:00) Central Time (US & Canada)",
              "label": "(GMT-06:00) Central Time (US & Canada)"
            },
            {
              "value": "-06:00 ~ (GMT-06:00) Saskatchewan",
              "label": "(GMT-06:00) Saskatchewan"
            },
            {
              "value": "-06:00 ~ (GMT-06:00) Monterrey",
              "label": "(GMT-06:00) Monterrey"
            },
            {
              "value": "-05:00 ~ (GMT-05:00) Eastern Time (US & Canada)",
              "label": "(GMT-05:00) Eastern Time (US & Canada)"
            },
            {
              "value": "-05:00 ~ (GMT-05:00) Indiana (East)",
              "label": "(GMT-05:00) Indiana (East)"
            },
            {
              "value": "-05:00 ~ (GMT-05:00) Bogota",
              "label": "(GMT-05:00) Bogota"
            },
            {
              "value": "-05:00 ~ (GMT-05:00) Lima",
              "label": "(GMT-05:00) Lima"
            },
            {
              "value": "-05:00 ~ (GMT-05:00) Quito",
              "label": "(GMT-05:00) Quito"
            },
            {
              "value": "-04:00 ~ (GMT-04:00) Atlantic Time (Canada)",
              "label": "(GMT-04:00) Atlantic Time (Canada)"
            },
            {
              "value": "-04:30 ~ (GMT-04:30) Caracas",
              "label": "(GMT-04:30) Caracas"
            },
            {
              "value": "-04:00 ~ (GMT-04:00) La Paz",
              "label": "(GMT-04:00) La Paz"
            },
            {
              "value": "-04:00 ~ (GMT-04:00) Santiago",
              "label": "(GMT-04:00) Santiago"
            },
            {
              "value": "-03:30 ~ (GMT-03:30) Newfoundland",
              "label": "(GMT-03:30) Newfoundland"
            },
            {
              "value": "-03:00 ~ (GMT-03:00) Brasilia",
              "label": "(GMT-03:00) Brasilia"
            },
            {
              "value": "-03:00 ~ (GMT-03:00) Buenos Aires",
              "label": "(GMT-03:00) Buenos Aires"
            },
            {
              "value": "-04:00 ~ (GMT-04:00) Georgetown",
              "label": "(GMT-04:00) Georgetown"
            },
            {
              "value": "-03:00 ~ (GMT-03:00) Greenland",
              "label": "(GMT-03:00) Greenland"
            },
            {
              "value": "-01:00 ~ (GMT-01:00) Azores",
              "label": "(GMT-01:00) Azores"
            },
            {
              "value": "-01:00 ~ (GMT-01:00) Cape Verde Is.",
              "label": "(GMT-01:00) Cape Verde Is."
            },
            {
              "value": "+00:00 ~ (GMT+00:00) Dublin",
              "label": "(GMT+00:00) Dublin"
            },
            {
              "value": "+00:00 ~ (GMT+00:00) Edinburgh",
              "label": "(GMT+00:00) Edinburgh"
            },
            {
              "value": "+00:00 ~ (GMT+00:00) Lisbon",
              "label": "(GMT+00:00) Lisbon"
            },
            {
              "value": "+00:00 ~ (GMT+00:00) Casablanca",
              "label": "(GMT+00:00) Casablanca"
            },
            {
              "value": "+00:00 ~ (GMT+00:00) Monrovia",
              "label": "(GMT+00:00) Monrovia"
            },
            {
              "value": "+00:00 ~ (GMT+00:00) UTC",
              "label": "(GMT+00:00) UTC"
            },
            {
              "value": "+01:00 ~ (GMT+01:00) Belgrade",
              "label": "(GMT+01:00) Belgrade"
            },
            {
              "value": "+01:00 ~ (GMT+01:00) Bratislava",
              "label": "(GMT+01:00) Bratislava"
            },
            {
              "value": "+01:00 ~ (GMT+01:00) Budapest",
              "label": "(GMT+01:00) Budapest"
            },
            {
              "value": "+01:00 ~ (GMT+01:00) Ljubljana",
              "label": "(GMT+01:00) Ljubljana"
            },
            {
              "value": "+01:00 ~ (GMT+01:00) Prague",
              "label": "(GMT+01:00) Prague"
            },
            {
              "value": "+01:00 ~ (GMT+01:00) Sarajevo",
              "label": "(GMT+01:00) Sarajevo"
            },
            {
              "value": "+01:00 ~ (GMT+01:00) Skopje",
              "label": "(GMT+01:00) Skopje"
            },
            {
              "value": "+01:00 ~ (GMT+01:00) Warsaw",
              "label": "(GMT+01:00) Warsaw"
            },
            {
              "value": "+01:00 ~ (GMT+01:00) Zagreb",
              "label": "(GMT+01:00) Zagreb"
            },
            {
              "value": "+01:00 ~ (GMT+01:00) Brussels",
              "label": "(GMT+01:00) Brussels"
            },
            {
              "value": "+01:00 ~ (GMT+01:00) Copenhagen",
              "label": "(GMT+01:00) Copenhagen"
            },
            {
              "value": "+01:00 ~ (GMT+01:00) Madrid",
              "label": "(GMT+01:00) Madrid"
            },
            {
              "value": "+01:00 ~ (GMT+01:00) Paris",
              "label": "(GMT+01:00) Paris"
            },
            {
              "value": "+01:00 ~ (GMT+01:00) Amsterdam",
              "label": "(GMT+01:00) Amsterdam"
            },
            {
              "value": "+01:00 ~ (GMT+01:00) Berlin",
              "label": "(GMT+01:00) Berlin"
            },
            {
              "value": "+01:00 ~ (GMT+01:00) Bern",
              "label": "(GMT+01:00) Bern"
            },
            {
              "value": "+01:00 ~ (GMT+01:00) Rome",
              "label": "(GMT+01:00) Rome"
            },
            {
              "value": "+01:00 ~ (GMT+01:00) Stockholm",
              "label": "(GMT+01:00) Stockholm"
            },
            {
              "value": "+01:00 ~ (GMT+01:00) Vienna",
              "label": "(GMT+01:00) Vienna"
            },
            {
              "value": "+01:00 ~ (GMT+01:00) West Central Africa",
              "label": "(GMT+01:00) West Central Africa"
            },
            {
              "value": "+02:00 ~ (GMT+02:00) Bucharest",
              "label": "(GMT+02:00) Bucharest"
            },
            {
              "value": "+02:00 ~ (GMT+02:00) Cairo",
              "label": "(GMT+02:00) Cairo"
            },
            {
              "value": "+02:00 ~ (GMT+02:00) Helsinki",
              "label": "(GMT+02:00) Helsinki"
            },
            {
              "value": "+02:00 ~ (GMT+02:00) Kyiv",
              "label": "(GMT+02:00) Kyiv"
            },
            {
              "value": "+02:00 ~ (GMT+02:00) Riga",
              "label": "(GMT+02:00) Riga"
            },
            {
              "value": "+02:00 ~ (GMT+02:00) Sofia",
              "label": "(GMT+02:00) Sofia"
            },
            {
              "value": "+02:00 ~ (GMT+02:00) Tallinn",
              "label": "(GMT+02:00) Tallinn"
            },
            {
              "value": "+02:00 ~ (GMT+02:00) Vilnius",
              "label": "(GMT+02:00) Vilnius"
            },
            {
              "value": "+02:00 ~ (GMT+02:00) Athens",
              "label": "(GMT+02:00) Athens"
            },
            {
              "value": "+02:00 ~ (GMT+02:00) Istanbul",
              "label": "(GMT+02:00) Istanbul"
            },
            {
              "value": "+03:00 ~ (GMT+03:00) Minsk",
              "label": "(GMT+03:00) Minsk"
            },
            {
              "value": "+02:00 ~ (GMT+02:00) Jerusalem",
              "label": "(GMT+02:00) Jerusalem"
            },
            {
              "value": "+02:00 ~ (GMT+02:00) Harare",
              "label": "(GMT+02:00) Harare"
            },
            {
              "value": "+02:00 ~ (GMT+02:00) Pretoria",
              "label": "(GMT+02:00) Pretoria"
            },
            {
              "value": "+04:00 ~ (GMT+04:00) Moscow",
              "label": "(GMT+04:00) Moscow"
            },
            {
              "value": "+04:00 ~ (GMT+04:00) Volgograd",
              "label": "(GMT+04:00) Volgograd"
            },
            {
              "value": "+03:00 ~ (GMT+03:00) Kuwait",
              "label": "(GMT+03:00) Kuwait"
            },
            {
              "value": "+03:00 ~ (GMT+03:00) Riyadh",
              "label": "(GMT+03:00) Riyadh"
            },
            {
              "value": "+03:00 ~ (GMT+03:00) Nairobi",
              "label": "(GMT+03:00) Nairobi"
            },
            {
              "value": "+03:00 ~ (GMT+03:00) Baghdad",
              "label": "(GMT+03:00) Baghdad"
            },
            {
              "value": "+03:30 ~ (GMT+03:30) Tehran",
              "label": "(GMT+03:30) Tehran"
            },
            {
              "value": "+04:00 ~ (GMT+04:00) Abu Dhabi",
              "label": "(GMT+04:00) Abu Dhabi"
            },
            {
              "value": "+04:00 ~ (GMT+04:00) Muscat",
              "label": "(GMT+04:00) Muscat"
            },
            {
              "value": "+04:00 ~ (GMT+04:00) Baku",
              "label": "(GMT+04:00) Baku"
            },
            {
              "value": "+04:00 ~ (GMT+04:00) Tbilisi",
              "label": "(GMT+04:00) Tbilisi"
            },
            {
              "value": "+04:00 ~ (GMT+04:00) Yerevan",
              "label": "(GMT+04:00) Yerevan"
            },
            {
              "value": "+04:30 ~ (GMT+04:30) Kabul",
              "label": "(GMT+04:30) Kabul"
            },
            {
              "value": "+06:00 ~ (GMT+06:00) Ekaterinburg",
              "label": "(GMT+06:00) Ekaterinburg"
            },
            {
              "value": "+05:00 ~ (GMT+05:00) Islamabad",
              "label": "(GMT+05:00) Islamabad"
            },
            {
              "value": "+05:00 ~ (GMT+05:00) Karachi",
              "label": "(GMT+05:00) Karachi"
            },
            {
              "value": "+05:00 ~ (GMT+05:00) Tashkent",
              "label": "(GMT+05:00) Tashkent"
            },
            {
              "value": "+05:30 ~ (GMT+05:30) Chennai",
              "label": "(GMT+05:30) Chennai"
            },
            {
              "value": "+05:30 ~ (GMT+05:30) Kolkata",
              "label": "(GMT+05:30) Kolkata"
            },
            {
              "value": "+05:45 ~ (GMT+05:45) Kathmandu",
              "label": "(GMT+05:45) Kathmandu"
            },
            {
              "value": "+06:00 ~ (GMT+06:00) Astana",
              "label": "(GMT+06:00) Astana"
            },
            {
              "value": "+06:00 ~ (GMT+06:00) Dhaka",
              "label": "(GMT+06:00) Dhaka"
            },
            {
              "value": "+05:30 ~ (GMT+05:30) Sri Jayawardenepura",
              "label": "(GMT+05:30) Sri Jayawardenepura"
            },
            {
              "value": "+06:00 ~ (GMT+06:00) Almaty",
              "label": "(GMT+06:00) Almaty"
            },
            {
              "value": "+07:00 ~ (GMT+07:00) Novosibirsk",
              "label": "(GMT+07:00) Novosibirsk"
            },
            {
              "value": "+06:30 ~ (GMT+06:30) Rangoon",
              "label": "(GMT+06:30) Rangoon"
            },
            {
              "value": "+07:00 ~ (GMT+07:00) Bangkok",
              "label": "(GMT+07:00) Bangkok"
            },
            {
              "value": "+07:00 ~ (GMT+07:00) Hanoi",
              "label": "(GMT+07:00) Hanoi"
            },
            {
              "value": "+07:00 ~ (GMT+07:00) Jakarta",
              "label": "(GMT+07:00) Jakarta"
            },
            {
              "value": "+08:00 ~ (GMT+08:00) Krasnoyarsk",
              "label": "(GMT+08:00) Krasnoyarsk"
            },
            {
              "value": "+08:00 ~ (GMT+08:00) Beijing",
              "label": "(GMT+08:00) Beijing"
            },
            {
              "value": "+08:00 ~ (GMT+08:00) Chongqing",
              "label": "(GMT+08:00) Chongqing"
            },
            {
              "value": "+08:00 ~ (GMT+08:00) Hong Kong",
              "label": "(GMT+08:00) Hong Kong"
            },
            {
              "value": "+08:00 ~ (GMT+08:00) Urumqi",
              "label": "(GMT+08:00) Urumqi"
            },
            {
              "value": "+08:00 ~ (GMT+08:00) Kuala Lumpur",
              "label": "(GMT+08:00) Kuala Lumpur"
            },
            {
              "value": "+08:00 ~ (GMT+08:00) Singapore",
              "label": "(GMT+08:00) Singapore"
            },
            {
              "value": "+08:00 ~ (GMT+08:00) Taipei",
              "label": "(GMT+08:00) Taipei"
            },
            {
              "value": "+08:00 ~ (GMT+08:00) Perth",
              "label": "(GMT+08:00) Perth"
            },
            {
              "value": "+09:00 ~ (GMT+09:00) Irkutsk",
              "label": "(GMT+09:00) Irkutsk"
            },
            {
              "value": "+08:00 ~ (GMT+08:00) Ulaan Bataar",
              "label": "(GMT+08:00) Ulaan Bataar"
            },
            {
              "value": "+09:00 ~ (GMT+09:00) Seoul",
              "label": "(GMT+09:00) Seoul"
            },
            {
              "value": "+09:00 ~ (GMT+09:00) Osaka",
              "label": "(GMT+09:00) Osaka"
            },
            {
              "value": "+10:00 ~ (GMT+10:00) Yakutsk",
              "label": "(GMT+10:00) Yakutsk"
            },
            {
              "value": "+09:30 ~ (GMT+09:30) Darwin",
              "label": "(GMT+09:30) Darwin"
            },
            {
              "value": "+09:30 ~ (GMT+09:30) Adelaide",
              "label": "(GMT+09:30) Adelaide"
            },
            {
              "value": "+10:00 ~ (GMT+10:00) Canberra",
              "label": "(GMT+10:00) Canberra"
            },
            {
              "value": "+10:00 ~ (GMT+10:00) Melbourne",
              "label": "(GMT+10:00) Melbourne"
            },
            {
              "value": "+10:00 ~ (GMT+10:00) Sydney",
              "label": "(GMT+10:00) Sydney"
            },
            {
              "value": "+10:00 ~ (GMT+10:00) Brisbane",
              "label": "(GMT+10:00) Brisbane"
            },
            {
              "value": "+10:00 ~ (GMT+10:00) Hobart",
              "label": "(GMT+10:00) Hobart"
            },
            {
              "value": "+11:00 ~ (GMT+11:00) Vladivostok",
              "label": "(GMT+11:00) Vladivostok"
            },
            {
              "value": "+10:00 ~ (GMT+10:00) Guam",
              "label": "(GMT+10:00) Guam"
            },
            {
              "value": "+10:00 ~ (GMT+10:00) Port Moresby",
              "label": "(GMT+10:00) Port Moresby"
            },
            {
              "value": "+12:00 ~ (GMT+12:00) Magadan",
              "label": "(GMT+12:00) Magadan"
            },
            {
              "value": "+12:00 ~ (GMT+12:00) Solomon Is.",
              "label": "(GMT+12:00) Solomon Is."
            },
            {
              "value": "+12:00 ~ (GMT+12:00) Fiji",
              "label": "(GMT+12:00) Fiji"
            },
            {
              "value": "+12:00 ~ (GMT+12:00) Kamchatka",
              "label": "(GMT+12:00) Kamchatka"
            },
            {
              "value": "+12:00 ~ (GMT+12:00) Marshall Is.",
              "label": "(GMT+12:00) Marshall Is."
            },
            {
              "value": "+12:00 ~ (GMT+12:00) Auckland",
              "label": "(GMT+12:00) Auckland"
            },
            {
              "value": "+13:00 ~ (GMT+13:00) Nuku'alofa",
              "label": "(GMT+13:00) Nuku'alofa"
            },
            {
              "value": "+13:00 ~ (GMT+13:00) Tokelau Is.",
              "label": "(GMT+13:00) Tokelau Is."
            },
            {
              "value": "+13:00 ~ (GMT+13:00) Samoa",
              "label": "(GMT+13:00) Samoa"
            }
          ]
        },
        {
          "type": "header",
          "content": "⏱ Start"
        },
        {
          "type": "select",
          "id": "start_month",
          "label": "Month",
          "default": "January",
          "options": [
            {
              "value": "January",
              "label": "January"
            },
            {
              "value": "February",
              "label": "February"
            },
            {
              "value": "March",
              "label": "March"
            },
            {
              "value": "April",
              "label": "April"
            },
            {
              "value": "May",
              "label": "May"
            },
            {
              "value": "June",
              "label": "June"
            },
            {
              "value": "July",
              "label": "July"
            },
            {
              "value": "August",
              "label": "August"
            },
            {
              "value": "September",
              "label": "September"
            },
            {
              "value": "October",
              "label": "October"
            },
            {
              "value": "November",
              "label": "November"
            },
            {
              "value": "December",
              "label": "December"
            }
          ]
        },
        {
          "type": "range",
          "id": "start_day",
          "label": "Day",
          "min": 1,
          "max": 31,
          "step": 1,
          "default": 1
        },
        {
          "type": "text",
          "id": "start_year",
          "label": "Year",
          "default": "2021"
        },
        {
          "type": "select",
          "id": "start_time",
          "label": "Start time",
          "default": "23:30:00",
          "options": [
            {
              "value": "00:00:00",
              "label": "12:00 am (0:00)"
            },
            {
              "value": "00:30:00",
              "label": "12:30 am (0:30)"
            },
            {
              "value": "01:00:00",
              "label": "1:00 am (1:00)"
            },
            {
              "value": "01:30:00",
              "label": "1:30 am (1:30)"
            },
            {
              "value": "02:00:00",
              "label": "2:00 am (2:00)"
            },
            {
              "value": "02:30:00",
              "label": "2:30 am (2:30)"
            },
            {
              "value": "03:00:00",
              "label": "3:00 am (3:00)"
            },
            {
              "value": "03:30:00",
              "label": "3:30 am (3:30)"
            },
            {
              "value": "04:00:00",
              "label": "4:00 am (4:00)"
            },
            {
              "value": "04:30:00",
              "label": "4:30 am (4:30)"
            },
            {
              "value": "05:00:00",
              "label": "5:00 am (5:00)"
            },
            {
              "value": "05:30:00",
              "label": "5:30 am (5:30)"
            },
            {
              "value": "06:00:00",
              "label": "6:00 am (6:00)"
            },
            {
              "value": "06:30:00",
              "label": "6:30 am (6:30)"
            },
            {
              "value": "07:00:00",
              "label": "7:00 am (7:00)"
            },
            {
              "value": "07:30:00",
              "label": "7:30 am (7:30)"
            },
            {
              "value": "08:00:00",
              "label": "8:00 am (8:00)"
            },
            {
              "value": "08:30:00",
              "label": "8:30 am (8:30)"
            },
            {
              "value": "09:00:00",
              "label": "9:00 am (9:00)"
            },
            {
              "value": "09:30:00",
              "label": "9:30 am (9:30)"
            },
            {
              "value": "10:00:00",
              "label": "10:00 am (10:00)"
            },
            {
              "value": "10:30:00",
              "label": "10:30 am (10:30)"
            },
            {
              "value": "11:00:00",
              "label": "11:00 am (11:00)"
            },
            {
              "value": "11:30:00",
              "label": "11:30 am (11:30)"
            },
            {
              "value": "12:00:00",
              "label": "12:00 pm (12:00)"
            },
            {
              "value": "12:30:00",
              "label": "12:30 pm (12:30)"
            },
            {
              "value": "13:00:00",
              "label": "1:00 pm (13:00)"
            },
            {
              "value": "13:30:00",
              "label": "1:30 pm (13:30)"
            },
            {
              "value": "14:00:00",
              "label": "2:00 pm (14:00)"
            },
            {
              "value": "14:30:00",
              "label": "2:30 pm (14:30)"
            },
            {
              "value": "15:00:00",
              "label": "3:00 pm (15:00)"
            },
            {
              "value": "15:30:00",
              "label": "3:30 pm (15:30)"
            },
            {
              "value": "16:00:00",
              "label": "4:00 pm (16:00)"
            },
            {
              "value": "16:30:00",
              "label": "4:30 pm (16:30)"
            },
            {
              "value": "17:00:00",
              "label": "5:00 pm (17:00)"
            },
            {
              "value": "17:30:00",
              "label": "5:30 pm (17:30)"
            },
            {
              "value": "18:00:00",
              "label": "6:00 pm (18:00)"
            },
            {
              "value": "18:30:00",
              "label": "6:30 pm (18:30)"
            },
            {
              "value": "19:00:00",
              "label": "7:00 pm (19:00)"
            },
            {
              "value": "19:30:00",
              "label": "7:30 pm (19:30)"
            },
            {
              "value": "20:00:00",
              "label": "8:00 pm (20:00)"
            },
            {
              "value": "20:30:00",
              "label": "8:30 pm (20:30)"
            },
            {
              "value": "21:00:00",
              "label": "9:00 pm (21:00)"
            },
            {
              "value": "21:30:00",
              "label": "9:30 pm (21:30)"
            },
            {
              "value": "22:00:00",
              "label": "10:00 pm (22:00)"
            },
            {
              "value": "22:30:00",
              "label": "10:30 pm (22:30)"
            },
            {
              "value": "23:00:00",
              "label": "11:00 pm (23:00)"
            },
            {
              "value": "23:30:00",
              "label": "11:30 pm (23:30)"
            }
          ]
        },
        {
          "type": "header",
          "content": "🏁 End"
        },
        {
          "type": "select",
          "id": "end_month",
          "label": "Month",
          "default": "December",
          "options": [
            {
              "value": "January",
              "label": "January"
            },
            {
              "value": "February",
              "label": "February"
            },
            {
              "value": "March",
              "label": "March"
            },
            {
              "value": "April",
              "label": "April"
            },
            {
              "value": "May",
              "label": "May"
            },
            {
              "value": "June",
              "label": "June"
            },
            {
              "value": "July",
              "label": "July"
            },
            {
              "value": "August",
              "label": "August"
            },
            {
              "value": "September",
              "label": "September"
            },
            {
              "value": "October",
              "label": "October"
            },
            {
              "value": "November",
              "label": "November"
            },
            {
              "value": "December",
              "label": "December"
            }
          ]
        },
        {
          "type": "range",
          "id": "end_day",
          "label": "Day",
          "min": 1,
          "max": 31,
          "step": 1,
          "default": 1
        },
        {
          "type": "text",
          "id": "end_year",
          "label": "Year",
          "default": "2024"
        },
        {
          "type": "select",
          "id": "end_time",
          "label": "End time",
          "default": "23:30:00",
          "options": [
            {
              "value": "00:00:00",
              "label": "12:00 am (0:00)"
            },
            {
              "value": "00:30:00",
              "label": "12:30 am (0:30)"
            },
            {
              "value": "01:00:00",
              "label": "1:00 am (1:00)"
            },
            {
              "value": "01:30:00",
              "label": "1:30 am (1:30)"
            },
            {
              "value": "02:00:00",
              "label": "2:00 am (2:00)"
            },
            {
              "value": "02:30:00",
              "label": "2:30 am (2:30)"
            },
            {
              "value": "03:00:00",
              "label": "3:00 am (3:00)"
            },
            {
              "value": "03:30:00",
              "label": "3:30 am (3:30)"
            },
            {
              "value": "04:00:00",
              "label": "4:00 am (4:00)"
            },
            {
              "value": "04:30:00",
              "label": "4:30 am (4:30)"
            },
            {
              "value": "05:00:00",
              "label": "5:00 am (5:00)"
            },
            {
              "value": "05:30:00",
              "label": "5:30 am (5:30)"
            },
            {
              "value": "06:00:00",
              "label": "6:00 am (6:00)"
            },
            {
              "value": "06:30:00",
              "label": "6:30 am (6:30)"
            },
            {
              "value": "07:00:00",
              "label": "7:00 am (7:00)"
            },
            {
              "value": "07:30:00",
              "label": "7:30 am (7:30)"
            },
            {
              "value": "08:00:00",
              "label": "8:00 am (8:00)"
            },
            {
              "value": "08:30:00",
              "label": "8:30 am (8:30)"
            },
            {
              "value": "09:00:00",
              "label": "9:00 am (9:00)"
            },
            {
              "value": "09:30:00",
              "label": "9:30 am (9:30)"
            },
            {
              "value": "10:00:00",
              "label": "10:00 am (10:00)"
            },
            {
              "value": "10:30:00",
              "label": "10:30 am (10:30)"
            },
            {
              "value": "11:00:00",
              "label": "11:00 am (11:00)"
            },
            {
              "value": "11:30:00",
              "label": "11:30 am (11:30)"
            },
            {
              "value": "12:00:00",
              "label": "12:00 pm (12:00)"
            },
            {
              "value": "12:30:00",
              "label": "12:30 pm (12:30)"
            },
            {
              "value": "13:00:00",
              "label": "1:00 pm (13:00)"
            },
            {
              "value": "13:30:00",
              "label": "1:30 pm (13:30)"
            },
            {
              "value": "14:00:00",
              "label": "2:00 pm (14:00)"
            },
            {
              "value": "14:30:00",
              "label": "2:30 pm (14:30)"
            },
            {
              "value": "15:00:00",
              "label": "3:00 pm (15:00)"
            },
            {
              "value": "15:30:00",
              "label": "3:30 pm (15:30)"
            },
            {
              "value": "16:00:00",
              "label": "4:00 pm (16:00)"
            },
            {
              "value": "16:30:00",
              "label": "4:30 pm (16:30)"
            },
            {
              "value": "17:00:00",
              "label": "5:00 pm (17:00)"
            },
            {
              "value": "17:30:00",
              "label": "5:30 pm (17:30)"
            },
            {
              "value": "18:00:00",
              "label": "6:00 pm (18:00)"
            },
            {
              "value": "18:30:00",
              "label": "6:30 pm (18:30)"
            },
            {
              "value": "19:00:00",
              "label": "7:00 pm (19:00)"
            },
            {
              "value": "19:30:00",
              "label": "7:30 pm (19:30)"
            },
            {
              "value": "20:00:00",
              "label": "8:00 pm (20:00)"
            },
            {
              "value": "20:30:00",
              "label": "8:30 pm (20:30)"
            },
            {
              "value": "21:00:00",
              "label": "9:00 pm (21:00)"
            },
            {
              "value": "21:30:00",
              "label": "9:30 pm (21:30)"
            },
            {
              "value": "22:00:00",
              "label": "10:00 pm (22:00)"
            },
            {
              "value": "22:30:00",
              "label": "10:30 pm (22:30)"
            },
            {
              "value": "23:00:00",
              "label": "11:00 pm (23:00)"
            },
            {
              "value": "23:30:00",
              "label": "11:30 pm (23:30)"
            }
          ]
        }
      ]
    },
    {
      "type": "liquid",
      "name": "Liquid/HTML",
      "settings": [
        {
          "type": "paragraph",
          "content": "Copy and paste your custom code."
        },
        {
          "type": "liquid",
          "id": "liquid",
          "label": "Liquid and/or HTML"
        }
      ]
    },
    {
      "type": "@app"
    }
  ],
  "settings": [
    {
      "type": "header",
      "content": "Slideshow"
    },
    {
      "type": "checkbox",
      "id": "enable_lightbox",
      "label": "Enable lightbox",
      "default": false,
      "info": "Show larger image on click. Image links are disabled when lightbox is enabled."
    },
    {
      "type": "select",
      "id": "image_crop",
      "label": "Slideshow aspect ratio",
      "default": "1:1",
      "options": [
        {
          "value": "4:3",
          "label": "Landscape (4:3)"
        },
        {
          "value": "2:3",
          "label": "Portrait (2:3)"
        },
        {
          "value": "1:1",
          "label": "Square (1:1)"
        },
        {
          "value": "none",
          "label": "Original"
        }
      ]
    },
    {
      "type": "select",
      "id": "image_position",
      "label": "Slideshow position",
      "default": "right",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ]
    },
    {
      "type": "checkbox",
      "id": "show_arrows",
      "label": "Show arrows",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_dots",
      "label": "Show navigation dots",
      "default": true
    },
    {
      "type": "range",
      "id": "autoplay",
      "label": "Change slide every",
      "min": 0,
      "max": 20,
      "step": 1,
      "default": 8,
      "unit": "sec",
      "info": "Set to '0' to disable autoplay"
    },
    {
      "type": "header",
      "content": "Static text"
    },
    {
      "type": "select",
      "id": "text_alignment",
      "label": "Text alignment",
      "default": "left",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        },
        {
          "value": "justify",
          "label": "Justify"
        }
      ]
    },
    {
      "type": "header",
      "content": "✏️ Text appearance"
    },
    {
      "type": "range",
      "id": "text_size",
      "label": "Text size",
      "min": 80,
      "max": 150,
      "step": 5,
      "default": 90,
      "unit": "%"
    },
    {
      "type": "header",
      "content": "🎨 Design",
      "info": "Applies to static text"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text",
      "default": "#283144"
    },
    {
      "type": "color_background",
      "id": "text_background_color",
      "label": "Text background",
      "default": "linear-gradient(0deg, rgba(255, 255, 255, 1), rgba(255, 255, 255, 1) 100%)"
    },
    {
      "type": "color_background",
      "id": "background_color",
      "label": "Background"
    },
    {
      "type": "select",
      "id": "animation",
      "label": "Animation",
      "default": "none",
      "options": [
        {
          "value": "fade-in",
          "label": "Fade-in"
        },
        {
          "value": "fade-in-left",
          "label": "Fade-in left"
        },
        {
          "value": "fade-in-right",
          "label": "Fade-in right"
        },
        {
          "value": "fade-in-up",
          "label": "Fade-in up"
        },
        {
          "value": "fade-in-down",
          "label": "Fade-in down"
        },
        {
          "value": "none",
          "label": "None"
        }
      ]
    },
    {
      "type": "header",
      "content": "🖼 Layout"
    },
    {
      "type": "range",
      "id": "base_width",
      "label": "Size",
      "min": 60,
      "max": 100,
      "step": 5,
      "default": 100,
      "unit": "%"
    },
    {
      "type": "text",
      "id": "max_width",
      "label": "Maximum width",
      "placeholder": "eg. 1200px",
      "info": "Sets width constraint for content."
    },
    {
      "type": "range",
      "id": "inner_padding",
      "label": "Inner padding",
      "info": "Only applies to top and bottom.",
      "min": 0,
      "max": 100,
      "default": 60,
      "step": 5,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "outer_margin",
      "label": "Outer margin",
      "info": "Only applies to top and bottom.",
      "min": 0,
      "max": 100,
      "default": 0,
      "step": 5,
      "unit": "px"
    },
    {
      "type": "header",
      "content": "🚨 Advanced"
    },
    {
      "type": "textarea",
      "id": "custom_css",
      "label": "CSS"
    },
    {
      "type": "textarea",
      "id": "mobile_custom_css",
      "label": "Mobile CSS",
      "info": "Applied on screens less than 480px."
    },
    {
      "type": "checkbox",
      "id": "override_theme_font",
      "label": "Override default theme font",
      "default": false
    },
    {
      "type": "font_picker",
      "id": "heading_font",
      "label": "Heading",
      "default": "serif"
    },
    {
      "type": "font_picker",
      "id": "main_font",
      "label": "Text",
      "default": "sans-serif"
    },
    {
      "type": "checkbox",
      "id": "enable_metafield_detect",
      "label": "Enable metafield detection",
      "default": false,
      "info": "Removes placeholder media content."
    }
  ],
  "presets": [
    {
      "name": "Slideshow with text 🎒",
      "settings": {
        "image_crop": "2:3",
        "image_position": "left",
        "show_arrows": true,
        "show_dots": true,
        "autoplay": 12,
        "text_alignment": "left",
        "text_size": 90,
        "text_color": "#283144",
        "text_background_color": "linear-gradient(0deg, rgba(255, 255, 255, 1), rgba(255, 255, 255, 1) 100%)",
        "background_color": "",
        "animation": "fade-in",
        "base_width": 90,
        "max_width": "",
        "inner_padding": 50,
        "outer_margin": 0,
        "custom_css": "",
        "mobile_custom_css": "",
        "override_theme_font": false,
        "heading_font": "serif",
        "main_font": "sans-serif"
      },
      "blocks": [
        {
          "type": "small_text",
          "settings": {
            "small_text": "<p>New arrivals</p>"
          }
        },
        {
          "type": "heading",
          "settings": {
            "title": "Curated pieces you'll love."
          }
        },
        {
          "type": "text",
          "settings": {
            "text": "<p>Pull out the best products from your collections and highlight them in a slideshow with links. </p>"
          }
        },
        {
          "type": "slide",
          "settings": {
            "preheading": "STAY COZY",
            "title": "Coats & Jackets",
            "text": "",
            "button_label": "Shop now",
            "link": "",
            "text_alignment": "center",
            "text_position": "bottom",
            "focal_point": "center center",
            "text_color": "#ffffff",
            "text_background_color": "",
            "button_label_color": "#ffffff",
            "button_background_color": "rgba(0,0,0,0)",
            "background_color": ""
          }
        },
        {
          "type": "slide",
          "settings": {
            "preheading": "SIMPLE & CHIC",
            "title": "Accessories",
            "text": "",
            "button_label": "Shop now",
            "link": "",
            "text_alignment": "center",
            "text_position": "bottom",
            "focal_point": "center center",
            "text_color": "#ffffff",
            "text_background_color": "",
            "button_label_color": "#ffffff",
            "button_background_color": "rgba(0,0,0,0)",
            "background_color": ""
          }
        }
      ]
    }
  ],
  "locales": {
    "en": {
      "days": "Days",
      "hours": "Hours",
      "minutes": "Minutes",
      "seconds": "Seconds"
    }
  }
}
{% endschema %}

{%- comment -%} JSON Settings {%- endcomment -%}
<script type="application/json" data-dsgn-pck="{{ section.id }}">
  {
    "id": {{ section.id | json }},
    "animation": {{ section.settings.animation | json }},
    "show_arrows": {{ section.settings.show_arrows | json }},
    "show_dots": {{ section.settings.show_dots | json }},
    "autoplay": {{ section.settings.autoplay | times: 1000 | json }},
    "enable_lightbox": {{ section.settings.enable_lightbox | json }}
  }
</script>
{%- comment -%} External scripts {%- endcomment -%}
<script data-dsgn-pck-external-js="{{ section.id }}" src="https://cdn.shopify.com/s/files/1/0577/7673/4361/files/flickity-2.3.0.pkgd.min.js?v=1671485005" defer></script>
{%- if section.settings.enable_lightbox != blank -%}
  <script data-dsgn-pck-external-js="{{ section.id }}" src="https://cdn.shopify.com/s/files/1/0577/7673/4361/files/bigger-picture.min.js?v=1661823226" defer></script>
{%- endif -%}
{%- comment -%} JavaScript {%- endcomment -%}
<script data-dsgn-pck-js="{{ section.id }}" type="module" defer>
(function(){

  const designPack = {
    settings: {},
    animateSection: function(entries, observer){
      // Target the first entry available.
      let observedSection = entries[0];
      if (observedSection.isIntersecting) {
        observedSection.target.classList.add('dsgn-pck__animation-applied');
      }
    },
    initializeClock(selector, endtime, section) {
      function updateClock() {
        const t = designPack.getTimeRemaining(endtime);
        const daysSpan = clock.querySelector('.dsgn-pck__days .dsgn-pck__number');
        const hoursSpan = clock.querySelector('.dsgn-pck__hours .dsgn-pck__number');
        const minutesSpan = clock.querySelector('.dsgn-pck__minutes .dsgn-pck__number');
        const secondsSpan = clock.querySelector('.dsgn-pck__seconds .dsgn-pck__number');

        if (daysSpan.innerHTML != t.days){
          daysSpan.innerHTML = t.days;
        }
        if (hoursSpan.innerHTML != t.hours){
          hoursSpan.innerHTML = ('0' + t.hours).slice(-2);
        }
        if (minutesSpan.innerHTML != t.minutes){
          minutesSpan.innerHTML = ('0' + t.minutes).slice(-2);
        }
        if (secondsSpan.innerHTML != t.seconds){
          secondsSpan.innerHTML = ('0' + t.seconds).slice(-2);
        }

        if (t.total <= 0) {
          clearInterval(timeinterval);
        }
      }

      const clock = section.querySelector(selector);
      updateClock();
      const timeinterval = setInterval(updateClock, 1000);
    },
    getTimeRemaining(endtime){
      const total = Date.parse(endtime) - Date.parse(new Date());
      const seconds = Math.floor( (total/1000) % 60 );
      const minutes = Math.floor( (total/1000/60) % 60 );
      const hours = Math.floor( (total/(1000*60*60)) % 24 );
      const days = Math.floor( total/(1000*60*60*24) );

      return {
        total,
        days,
        hours,
        minutes,
        seconds
      };
    },
    enableCountdownTimer: function(section){
      const clock = '.dsgn-pck__clock';
      const startDate = section.querySelector('[data-timer-start]').dataset.timerStart;
      const endDate = section.querySelector('[data-timer-end]').dataset.timerEnd;

      const startMs = Date.parse(startDate);
      const endMs = Date.parse(endDate);
      const currentMs = Date.parse(new Date());

      if (endMs > currentMs && currentMs >= startMs ) {
        designPack.initializeClock(clock, endDate, section);
      } else {
        section.querySelector(`.dsgn-pck__clock-wrap`).style.display = 'none';
      }
    },
    goToSlide: function(index){
      designPack.flkty.select( index, true, true )
    },
    enableLightbox: function(section){
      const bp = BiggerPicture({
        target: document.body
      });

      const imageLinks = section.querySelectorAll(".dsgn-pck__lightbox-true");

      for (let link of imageLinks) {
        link.addEventListener('click', openGallery);
      }

      function openGallery(e) {
        e.preventDefault();
        bp.open({
          items: imageLinks,
          el: e.currentTarget
        });
      }
    },
    load: function(section){

      if (this.settings.animation !== 'none'){
        const options = {
          root: null,
          rootMargin: '0px',
          threshold: [0, 0.25, 0.5, 0.75, 1]
        };
        // Construct Intersection Observer.
        const observer = new IntersectionObserver( this.animateSection, options );
        // Observe if element is present.
        if (section) {
          observer.observe(section);
        }
      }

      const countdownTimer = section.querySelector('.dsgn-pck__clock');
      if (typeof countdownTimer !== 'undefined' && countdownTimer !== null){
        designPack.enableCountdownTimer(section);
      }

      const elem = section.querySelector(`#slideshow-${designPack.settings.id}`);
      designPack.flkty = new Flickity( elem, {
        cellAlign: 'left',
        autoPlay: this.settings.autoplay,
        contain: true,
        wrapAround: true,
        adaptiveHeight: true,
        imagesLoaded: true,
        prevNextButtons: this.settings.show_arrows,
        pageDots: this.settings.show_dots,
        on: {
          change: function( index ) {
            const color = this.selectedElement.dataset.slideshowColor;
            section.style.setProperty('--slideshow-color', color);
          }
        }
      });

      if (designPack.settings.enable_lightbox === true){
        designPack.enableLightbox(section);
      }
    },
    unload: function(section){
      section.classList.remove('dsgn-pck__animation-applied')
      designPack.flkty.destroy();
    }
  }

  window.addEventListener('shopify:section:unload', function (e) {
    const settings = document.querySelector(`[data-dsgn-pck="${e.detail.sectionId}"]`);
    const sectionId = e.detail.sectionId;
    const section = document.querySelector(`#DP--${e.detail.sectionId}`);
    if (sectionId == designPack.settings.id){
      designPack.unload(section);
    }
  });

  window.addEventListener('shopify:block:select', function (e) {
    const section = document.querySelector(`#DP--${e.detail.sectionId}`);
    designPack.goToSlide(e.target.dataset.slideshowIndex);
  });

  designPack.settings = JSON.parse(document.querySelector('[data-dsgn-pck="{{ section.id }}"]').innerHTML);
  const sectionId = {{ section.id | json }};
  const section = document.querySelector(`#DP--${sectionId}`);

  if (sectionId == designPack.settings.id){
    designPack.load(section);
  }
})()
</script>
