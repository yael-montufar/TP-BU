<style>
  .carousel-slide::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;

}
  

  .carousel-slide-content {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  }


  {% for block in section.blocks %}
  .carousel-slide.slide-{{ forloop.index }} {
    background-image: url('{{ block.settings.background_image | img_url: 'master' }}');
  }

  @media (max-width: 749px) { /* Adjust the breakpoint value as needed */
    .carousel-slide.slide-{{ forloop.index }} {
      background-image: url('{{ block.settings.background_image_mobile | img_url: 'master' }}');
    }

    .carousel-slide::before {
{% comment %}         background-color: rgba(0, 0, 0, 0.25); /* Adjust the color and opacity as needed */ {% endcomment %}
    }
  }


  .slide-{{ forloop.index }} .slide-heading {
    font-size: 4.8rem;
    font-weight: 600;
    {%- if block.settings.text_color and block.settings.text_color != "rgba(0,0,0,0)" -%}
      color: {{ block.settings.text_color }};
    {%- endif -%}
    margin: 0px;
  }
  .slide-{{ forloop.index }} .slide-heading span {
    font-size: 4.8rem;
    font-weight: 600;
    color: {{ block.settings.typed_text_color }};
    margin: 0px;
  }

  .slide-{{ forloop.index }} .carousel-nav-item.active {
    color: {{ block.settings.typed_text_color }};
  }
{% endfor %}

.carousel-slide-content h2 > p {
  display: inline;
}
</style>

<div class="hero-carousel">
  <div class="carousel-slides">
    {% for block in section.blocks %}
    <div class="carousel-slide slide-{{ forloop.index }}" data-typewriter-text="{{ block.settings.typewriter_text }}">
      <div class="carousel-slide-content">
        <h2 class="slide-heading">{{ block.settings.heading }}
          <div class="typewriter-container">
            <span class="typewriter-text"></span>
            <span class="typewriter-cursor">|</span>
          </div>
        </h2>
      
        
        
        <a href="{{ block.settings.cta_url }}" class="slide-cta">{{ block.settings.cta_text }}</a>
        
        <div class="carousel-navigation">
          {% for navBlock in section.blocks %}
          <a href="#" class="carousel-nav-item {% if navBlock.id == block.id %}active{% endif %}" data-slide="{{ forloop.index0 }}">{{ navBlock.settings.block_title }}</a>
          {% endfor %}
        </div>
      </div>
    </div>
    {% endfor %}
  </div>
</div>



{% schema %}
{
  "name": "⚒️ Home Banner Slider",
  "settings": [],
  "blocks": [
    {
      "type": "slide",
      "name": "Slide",
      "settings": [
        {
          "type": "image_picker",
          "id": "background_image",
          "label": "Background Image"
        },
        {
          "type": "image_picker",
          "id": "background_image_mobile",
          "label": "Background Image (Mobile)"
        },
        {
          "type": "richtext",
          "id": "heading",
          "label": "Heading"
        },
        {
          "type": "text",
          "id": "cta_text",
          "label": "CTA Text"
        },
        {
          "type": "url",
          "id": "cta_url",
          "label": "CTA URL"
        },
        {
          "type": "text",
          "id": "block_title",
          "label": "Block Title"
        },
        {
          "type": "textarea",
          "id": "typewriter_text",
          "label": "Typewriter Text",
          "default": "Line 1\nLine 2\nLine 3"
        },
        {
          "type": "color",
          "id": "text_color",
          "label": "Text color"
        },
        {
          "type": "color",
          "id": "typed_text_color",
          "label": "Typed text color"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "⚒️ Home Banner Slider"
    }
  ]
}

{% endschema %}

{% stylesheet %}
  .hero-carousel {
  position: relative;
  overflow: hidden;
}

.carousel-slides {
  position: relative;
  display: flex;
  width: 100%;
  min-height: 60rem;
  overflow: hidden;
}

.carousel-slide {
  background-size: cover;
  background-position: right;
  background-repeat: no-repeat;

  
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0;
  transition: opacity 1s ease-in-out;

  z-index: 0;
}


@media (max-width: 749px) {
  .carousel-slides {
    min-height: 60rem;
  }
  .carousel-slide::before {
    z-index: -1;
  }


  
  .carousel-slide {
    background-size: cover;
    background-position: top;
    background-repeat: no-repeat;

    padding: 3.2rem 0rem;
  }

  .carousel-slide-content h2 > p {
    display: inline-block !important;
    margin: 0;
    font-size: clamp(2.4rem, 100vw, 3.2rem) !important;
  }

  .slide-heading span {
    font-size: clamp(2.4rem, 100vw, 3.2rem) !important;
  }

  .carousel-slide {
    display: flex;
  }
  .carousel-slide-content {
    max-height: 75%;
    align-self: flex-end;
    position: unset !important;
  }


  .typewriter-container {
    display: block !important;
  }
}
  
.carousel-slide-content {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  text-align: left;
  

  gap: 3rem;
  margin-left: 10%;
}




  
.carousel-slide.active {
  opacity: 1;
  z-index: 1;
}



.slide-cta {
  display: inline-block;
  padding: 12px 24px;
  background-color: #0076ff;
  color: #ffffff;
  text-decoration: none;
}

.carousel-navigation {
  display: flex;
  justify-content: center;
  align-items: center;
  margin-top: 10px;
}

.carousel-nav-item {
  color: #7f8f9e;
  text-decoration: none;
  margin-right: 10px;
  cursor: pointer;
}
.carousel-nav-item:hover {
  text-decoration: underline;
}
.carousel-nav-item.active {
  text-decoration: underline;
}

/* .carousel-nav-item.active {
  font-weight: bold;
  color: #ffffff;
} */

.typewriter-container {
  display: inline-block;
  color: #ffffff;
  font-size: 20px;
/*   margin-left: 10px; */
}

.typewriter-cursor {
  animation: blink 1s steps(1) infinite;
}

@keyframes blink {
  50% {
    opacity: 0;
  }
}



{% endstylesheet %}

{% javascript %}
// Typewriter function
function typeWriter(element, texts, index, reverse, callback) {
  const speed = 100;
  const deleteSpeed = 50;
  const waitTime = 2000;
  let i = reverse ? texts[index].length - 1 : 0;

  function type() {
    setTimeout(() => {
      if (!reverse) {
        element.textContent += texts[index].charAt(i);
        i++;
      } else {
        element.textContent = element.textContent.slice(0, -1);
        i--;
      }

      if (i !== -1 && i !== texts[index].length) {
        type();
      } else {
        if (!reverse) {
          setTimeout(() => {
            callback(element, texts, index, !reverse, callback);
          }, waitTime);
        } else {
          callback(element, texts, (index + 1) % texts.length, !reverse, callback);
        }
      }
    }, reverse ? deleteSpeed : speed);
  }

  type();
}

// Initialize typewriter effect on first slide
const firstSlide = document.querySelector('.carousel-slide');
const firstTypewriterText = firstSlide.querySelector('.typewriter-text');
const texts = firstSlide.getAttribute('data-typewriter-text').split('\n');
typeWriter(firstTypewriterText, texts, 0, false, typeWriter);

function setActiveSlide(carousel, index) {
  const slides = carousel.querySelectorAll('.carousel-slide');
  slides.forEach((slide) => slide.classList.remove('active'));
  slides[index].classList.add('active');
}

// Event listener for .carousel-nav-item
document.querySelectorAll('.carousel-nav-item').forEach((navItem) => {
  navItem.addEventListener('click', function (e) {
    e.preventDefault();
    const slideIndex = parseInt(this.getAttribute('data-slide'), 10);
    const carousel = this.closest('.hero-carousel');

    setActiveSlide(carousel, slideIndex);

    const currentSlide = carousel.querySelectorAll('.carousel-slide')[slideIndex];
    const typewriterText = currentSlide.querySelector('.typewriter-text');
    const texts = currentSlide.getAttribute('data-typewriter-text').split('\n');

    if (!typewriterText.textContent) {
      typeWriter(typewriterText, texts, 0, false, typeWriter);
    }
  });
});

// Initialize first slide as active
const firstCarousel = document.querySelector('.hero-carousel');
setActiveSlide(firstCarousel, 0);


{% endjavascript %}